/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/animated_text.js":
/*!******************************!*\
  !*** ./src/animated_text.js ***!
  \******************************/
/*! exports provided: AnimatedText, TextPathNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AnimatedText\", function() { return AnimatedText; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextPathNode\", function() { return TextPathNode; });\n\r\n/**\r\n * @class AnimatedText\r\n *\r\n * Represents text able to be moved along horizontal axis\r\n */\r\nclass AnimatedText {\r\n\r\n    /**\r\n     * Constructs base animated text\r\n     *\r\n     * @param {Text} text Text to be displayed\r\n     * @param {Text} font Font setting of the displayed text\r\n     * @param {Text} color Color of displayed text\r\n     * @param {Text} align Alignment setting\r\n     * @param {Number} y Y coordinate of text movement\r\n     * @param {Array} nodes Array of nodes describing its path\r\n     */\r\n    constructor(text, font, color, align, y, nodes) {\r\n        this.text = text\r\n        this.font = font\r\n        this.color = color\r\n        this.align = align\r\n\r\n        this.nodes = nodes\r\n\r\n        this.timer = 0\r\n        this.currentNode = this.nodes[0]\r\n        this.nextNode = this.nodes[1]\r\n        this.nextNodeIndex = 1\r\n\r\n        this.x = this.currentNode.position\r\n        this.y = y\r\n        this.step = computeStep(this.currentNode, this.nextNode)\r\n    }\r\n\r\n    /**\r\n     * Procs the timer on this text\r\n     */\r\n    act() {\r\n        if(!this.nextNode) {\r\n            return\r\n        }\r\n\r\n        this.x += this.step\r\n\r\n        if(this.timer == this.nextNode.time) {\r\n            this.timer = 0\r\n            this.currentNode = this.nextNode\r\n            this.nextNodeIndex += 1\r\n\r\n            if(this.nodes.length == this.nextNodeIndex) {\r\n                this.nextNode = null\r\n            } else {\r\n                this.nextNode = this.nodes[this.nextNodeIndex]\r\n                this.step = computeStep(this.currentNode, this.nextNode)\r\n            }\r\n        }\r\n\r\n        this.timer += 1\r\n    }\r\n\r\n    /**\r\n     * Renders this animatd text\r\n     *\r\n     * @param {CanvasRenderingContext2D} context Context to draw with\r\n     */\r\n    render(context) {\r\n        context.save()\r\n\r\n        context.textAlign = this.align\r\n\r\n        context.font = this.font\r\n        context.fillStyle = this.color\r\n\r\n        context.fillText(this.text, this.x, this.y)\r\n\r\n        context.restore()\r\n    }\r\n}\r\n\r\n/**\r\n * Computes movement step for transition in between two nodes\r\n *\r\n * @param {Node} startNode Node where motion starts\r\n * @param {Node} endNode Node where motion ends\r\n * @returns Movement step of transition between given nodes\r\n */\r\nfunction computeStep(startNode, endNode) {\r\n    var distance = endNode.position - startNode.position\r\n    var time = endNode.time\r\n\r\n    return distance / time\r\n}\r\n\r\n/**\r\n * @class TextPathNode\r\n *\r\n * Represents single node on AnimatedText trajectory\r\n */\r\nclass TextPathNode {\r\n\r\n    /**\r\n     * Constructs base node\r\n     *\r\n     * @param {Number} position Position on horizontal axis\r\n     * @param {Number} time Time in which this position hsould be reached\r\n     */\r\n    constructor(position, time) {\r\n        this.position = position\r\n        this.time = time\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/animated_text.js?");

/***/ }),

/***/ "./src/game_states/base.js":
/*!*********************************!*\
  !*** ./src/game_states/base.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GameState; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! .. */ \"./src/index.js\");\n\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class GameState\r\n *\r\n * Represents the abstract game state\r\n */\r\nclass GameState {\r\n\r\n    /**\r\n     * Constructs base game state\r\n     */\r\n    constructor() {\r\n        // intentionally left blank\r\n    }\r\n\r\n    /**\r\n     * Procs timer on the state (called each game cycle)\r\n     */\r\n    act() {\r\n        throw new TypeError('State ' + this.constructor.name + ' should override the \\'act\\' function')\r\n    }\r\n\r\n    /**\r\n     * Renders the game world contents\r\n     *\r\n     * @param {number} elapsedTime Time elapsed after last cycle\r\n     */\r\n    render(elapsedTime, context) {\r\n        Object(___WEBPACK_IMPORTED_MODULE_0__[\"iterateOverGameObjects\"])((object) => {\r\n            object.render(context)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Updates current states of game world\r\n     *\r\n     * @param {number} elapsedTime Time elapsed after last cycle\r\n     */\r\n    update(elapsedTime) {\r\n        Object(___WEBPACK_IMPORTED_MODULE_0__[\"actObjects\"])()\r\n        Object(___WEBPACK_IMPORTED_MODULE_0__[\"handleBorderCrossing\"])()\r\n        Object(___WEBPACK_IMPORTED_MODULE_0__[\"handleCollisions\"])()\r\n    }\r\n\r\n    /**\r\n     * Handles the change in user input\r\n     */\r\n    handleInput() {\r\n        throw new TypeError('State ' + this.constructor.name + ' should override the \\'handleInput\\' function')\r\n    }\r\n\r\n    /**\r\n     * Handles situation when spaceship gets destroyed\r\n     */\r\n    handleGameEnd() {\r\n        throw new TypeError('State ' + this.constructor.name + ' should override the \\'handleGameEnd\\' function')\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/game_states/base.js?");

/***/ }),

/***/ "./src/game_states/end.js":
/*!********************************!*\
  !*** ./src/game_states/end.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return End; });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./src/game_states/base.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ \"./src/index.js\");\n/* harmony import */ var _menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./menu */ \"./src/game_states/menu.js\");\n/* harmony import */ var _animated_text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../animated_text */ \"./src/animated_text.js\");\n\r\n\r\n\r\n\r\n\r\n// ---------------------------------------- Constants ------------------------------------------- //\r\n\r\n/** Color of the text */\r\nconst TEXT_COLOR = 'white'\r\n\r\n/** Alignment of text */\r\nconst TEXT_ALIGNMENT = 'center'\r\n\r\n/** Font for the head items */\r\nconst HEAD_FONT = 'bold 72px Palatino'\r\n\r\n/** Lining after head font */\r\nconst HEAD_LINING = 150\r\n\r\n/** Vertical position of head items */\r\nconst HEAD_Y = (window.innerHeight - 95) / 4\r\n\r\n/** Font for the subhead items */\r\nconst SUB_FONT = 'bold 32px Palatino'\r\n\r\n/** Lining after sub font */\r\nconst SUB_LINING = 32\r\n\r\n/** Vertical position of level text */\r\nconst LEVEL_Y = HEAD_Y + HEAD_LINING \r\n\r\n/** Vertical position of score text */\r\nconst SCORE_Y = LEVEL_Y + SUB_LINING\r\n\r\n/** Vertical position of restart text */\r\nconst RESTART_Y = SCORE_Y + HEAD_LINING\r\n\r\n/** Width of canvas */\r\nconst CANVAS_WIDTH = window.innerWidth - 20\r\n\r\n/** Offset to hide text from screen */\r\nconst OFFSET = CANVAS_WIDTH * 4 / 11\r\n\r\n/** Point in the middle of the screen */\r\nconst POINT_MIDDLE = CANVAS_WIDTH * 10 / 21\r\n\r\n/** Point in the middle of the screen for subhead items */\r\nconst POINT_MIDDLE_RIGHT = CANVAS_WIDTH * 11 / 21\r\n\r\n/** Time for the text to get to the middle of the screen */\r\nconst APPEARANCE_DELAY = 20\r\n\r\n/** Time for the text to disappear from the middle of the screen */\r\nconst DISAPPEARANCE_DELAY = 20\r\n\r\n/** Delay of level text (after game over text) */\r\nconst LEVEL_DELAY = 60\r\n\r\n/** Delay of score text (after score text) */\r\nconst SCORE_DELAY = LEVEL_DELAY + 20\r\n\r\n/** Delay of level text (after level text) */\r\nconst RESTART_DELAY = SCORE_DELAY + 60\r\n\r\n/** Delay of between text fly off */\r\nconst FLY_OFF_DELAY = 10\r\n\r\n/** Final time of text appearance */\r\nconst APPEARANCE_TIME = RESTART_DELAY + APPEARANCE_DELAY + 10\r\n\r\n/** Final time of text fly-off */\r\nconst DISAPPEARANCE_TIME = 3 * FLY_OFF_DELAY + DISAPPEARANCE_DELAY\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\nclass End extends _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n        /**\r\n     * Constructs base play mode\r\n     */\r\n    constructor() {\r\n        super()\r\n\r\n        this.preTexts = preparePreTexts()\r\n        this.postTexts = preparePostTexts()\r\n\r\n        this.timer = APPEARANCE_TIME + DISAPPEARANCE_TIME\r\n        this.halfTime = DISAPPEARANCE_TIME\r\n        this.shouldRestart = false\r\n    }\r\n\r\n    /**\r\n     * Procs timer on the state (called each game cycle)\r\n     */\r\n    act() {\r\n        if(this.timer > this.halfTime || this.shouldRestart) {\r\n            this.timer -= 1\r\n        }\r\n\r\n        if(this.timer > this.halfTime) {\r\n            this.preTexts.forEach((text) => {\r\n                text.act()\r\n            })\r\n        } else if(this.shouldRestart) {\r\n            this.postTexts.forEach((text) => {\r\n                text.act()\r\n            })\r\n        }\r\n\r\n        if(this.timer == 0) {\r\n            Object(___WEBPACK_IMPORTED_MODULE_1__[\"restartGame\"])()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates current states of game world\r\n     *\r\n     * @param {number} elapsedTime Time elapsed after last cycle\r\n     */\r\n    update(elapsedTime) {\r\n        // intentionally left blank\r\n    }\r\n\r\n    /**\r\n     * Renders the game world contents\r\n     *\r\n     * @param {number} elapsedTime Time elapsed after last cycle\r\n     */\r\n    render(elapsedTime, context) {\r\n        if(this.timer >= this.halfTime) {\r\n            this.preTexts.forEach((text) => {\r\n                text.render(context)\r\n            })\r\n        } else if(this.shouldRestart) {\r\n            this.postTexts.forEach((text) => {\r\n                text.render(context)\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles the change in user input\r\n     */\r\n    handleInput() {\r\n        if(!___WEBPACK_IMPORTED_MODULE_1__[\"prevInput\"].menu && ___WEBPACK_IMPORTED_MODULE_1__[\"currInput\"].menu) {\r\n            Object(___WEBPACK_IMPORTED_MODULE_1__[\"switchState\"])(new _menu__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this))\r\n        }\r\n\r\n        if(this.timer == this.halfTime && ___WEBPACK_IMPORTED_MODULE_1__[\"currInput\"].restart) {\r\n            this.shouldRestart = true\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles situation when spaceship gets destroyed\r\n     */\r\n    handleGameEnd() {\r\n        // intentionally left blank\r\n    }\r\n}\r\n\r\n// ------------------------------------------ Inner --------------------------------------------- //\r\n\r\n/**\r\n * Prepares the animation of text to get them on the screen\r\n *\r\n * @returns Array of prepared AnimatedTexts\r\n */\r\nfunction preparePreTexts() {\r\n    var gameOverText = new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"AnimatedText\"]('GAME OVER', HEAD_FONT, TEXT_COLOR, TEXT_ALIGNMENT, HEAD_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](-OFFSET, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE, APPEARANCE_DELAY)\r\n    ])\r\n\r\n    var levelText = new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"AnimatedText\"]('LEVEL: ' + ___WEBPACK_IMPORTED_MODULE_1__[\"level\"], SUB_FONT, TEXT_COLOR, TEXT_ALIGNMENT, LEVEL_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](-OFFSET, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](-OFFSET, LEVEL_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE_RIGHT, APPEARANCE_DELAY)\r\n    ])\r\n\r\n    var scoreText = new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"AnimatedText\"]('SCORE: ' + ___WEBPACK_IMPORTED_MODULE_1__[\"score\"], SUB_FONT, TEXT_COLOR, TEXT_ALIGNMENT, SCORE_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](-OFFSET, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](-OFFSET, SCORE_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE_RIGHT, APPEARANCE_DELAY)\r\n    ])\r\n\r\n    var restartText = new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"AnimatedText\"]('To restart game press \\'R\\'!', SUB_FONT, TEXT_COLOR, TEXT_ALIGNMENT, RESTART_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](-OFFSET, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](-OFFSET, RESTART_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE_RIGHT, APPEARANCE_DELAY)\r\n    ])\r\n\r\n    return [gameOverText, levelText, scoreText, restartText]\r\n}\r\n\r\n/**\r\n * Prepares the animation of text to get them off the screen\r\n *\r\n * @returns Array of prepared AnimatedTexts\r\n */\r\nfunction preparePostTexts() {\r\n    var gameOverText = new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"AnimatedText\"]('GAME OVER', HEAD_FONT, TEXT_COLOR, TEXT_ALIGNMENT, HEAD_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](CANVAS_WIDTH + OFFSET, DISAPPEARANCE_DELAY)\r\n    ])\r\n\r\n    var levelText = new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"AnimatedText\"]('LEVEL: ' + ___WEBPACK_IMPORTED_MODULE_1__[\"level\"], SUB_FONT, TEXT_COLOR, TEXT_ALIGNMENT, LEVEL_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE_RIGHT, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE_RIGHT, FLY_OFF_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](CANVAS_WIDTH + OFFSET, DISAPPEARANCE_DELAY)\r\n    ])\r\n\r\n    var scoreText = new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"AnimatedText\"]('SCORE: ' + ___WEBPACK_IMPORTED_MODULE_1__[\"score\"], SUB_FONT, TEXT_COLOR, TEXT_ALIGNMENT, SCORE_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE_RIGHT, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE_RIGHT, 2 * FLY_OFF_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](CANVAS_WIDTH + OFFSET, DISAPPEARANCE_DELAY)\r\n    ])\r\n\r\n    var restartText = new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"AnimatedText\"]('To restart game press \\'R\\'!', SUB_FONT, TEXT_COLOR, TEXT_ALIGNMENT, RESTART_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE_RIGHT, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](POINT_MIDDLE_RIGHT, 3 * FLY_OFF_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_3__[\"TextPathNode\"](CANVAS_WIDTH + OFFSET, DISAPPEARANCE_DELAY)\r\n    ])\r\n\r\n    return [gameOverText, levelText, scoreText, restartText]\r\n}\n\n//# sourceURL=webpack:///./src/game_states/end.js?");

/***/ }),

/***/ "./src/game_states/menu.js":
/*!*********************************!*\
  !*** ./src/game_states/menu.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Menu; });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./src/game_states/base.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ \"./src/index.js\");\n\r\n\r\n\r\n// ---------------------------------------- Constants ------------------------------------------- //\r\n\r\n/** Width of canvas */\r\nconst CANVAS_WIDTH = window.innerWidth - 20\r\n\r\n/** Default font of menu */\r\nconst MENU_FONT = '21px Palatino'\r\n\r\n/** Default lining of menu */\r\nconst MENU_LINING = 25\r\n\r\n/** Header font of menu */\r\nconst MENU_HEADER_FONT = 'bold 38px Palatino'\r\n\r\n/** Header lining of menu */\r\nconst MENU_HEADER_LINING = 40\r\n\r\n/** Font of menu title */\r\nconst MENU_TITLE_FONT = 'bold 72px Palatino'\r\n\r\n/** Title of menu */\r\nconst MENU_TITLE = 'HELP'\r\n\r\n/** Font of the credits */\r\nconst CREDITS_FONT = '21px Palation'\r\n\r\n/** Padding of the credits text */\r\nconst CREDITS_PADDING = 24\r\n\r\n/** Position of the credits text */\r\nconst CREDITS_POSITION = window.innerHeight - 75 - CREDITS_PADDING\r\n\r\n/** Alignment of the credits text */\r\nconst CREDITS_ALIGNMENT = 'left'\r\n\r\n/** Color of text in menu */\r\nconst MENU_TEXT_COLOR = 'white'\r\n\r\n/** Padding of menu */\r\nconst MENU_PADDING = 50\r\n\r\n/** Offset of menu content */\r\nconst MENU_CONTENT_OFFSET = 150\r\n\r\n/** Content of menu */\r\nconst MenuContent = [\r\n    {text: 'Controls:',                                                     font: MENU_HEADER_FONT, lining: MENU_HEADER_LINING},\r\n    {text: '      * turn left:       A,      LEFT',                         font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '      * turn right:     D,      RIGHT',                         font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '      * shoot:           S,       DOWN,    SPACE',              font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '      * warp:            W,     UP',                            font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '      * menu:           ESC',                                   font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '',                                                              font: MENU_FONT, lining: MENU_LINING},\r\n    {text: 'Gameplay:',                                                     font: MENU_HEADER_FONT, lining: MENU_HEADER_LINING},\r\n    {text: '      * do not die (you have 3 lives)',                         font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '      * destroy all enemies (asteroids and UFOs)',              font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '      * once everything is destroyed, new level will begin',    font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '',                                                              font: MENU_FONT, lining: MENU_LINING},\r\n    {text: 'Mechanics:',                                                    font: MENU_HEADER_FONT, lining: MENU_HEADER_LINING},\r\n    {text: '      * the spaceship flies forwards with constant speed',      font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '      * warp can be only used, when it\\'s ready (indicator)',   font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '      * if you are hit during warping, it gets cancelled',      font: MENU_FONT, lining: MENU_LINING},\r\n    {text: '      * if the spaceship is flashing, you are invincible',      font: MENU_FONT, lining: MENU_LINING},\r\n]\r\n\r\n/**\r\n * Content of game credits\r\n */\r\nconst Credits = [\r\n    'Credits:',\r\n    ' * Animated text idea ~ https://github.com/RealJohnSmith',\r\n    ' * Sound effects ~ https://www.soundboard.com/sb/sound/252002, http://www.freesfx.co.uk, http://soundbible.com/'\r\n]\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class Menu\r\n *\r\n * Represents the state when game is paused and menu is shown\r\n */\r\nclass Menu extends _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    /**\r\n     * Constructs base menu state\r\n     *\r\n     * @param {GameState} prevState Previous game state\r\n     */\r\n    constructor(prevState) {\r\n        super()\r\n\r\n        this.prevState = prevState\r\n    }\r\n\r\n    /**\r\n     * Procs timer on the state (called each game cycle)\r\n     */\r\n    act() {\r\n        // intentionally left blank\r\n    }\r\n\r\n    /**\r\n     * Renders the game world contents\r\n     *\r\n     * @param {number} elapsedTime Time elapsed after last cycle\r\n     */\r\n    render(elapsedTime, context) {\r\n        context.save()\r\n        context.fillStyle = MENU_TEXT_COLOR\r\n\r\n        context.textAlign = 'center'\r\n        context.font = MENU_TITLE_FONT\r\n        context.fillText(MENU_TITLE, CANVAS_WIDTH / 2, MENU_PADDING + MENU_LINING)\r\n\r\n        context.textAlign = 'left'\r\n        var lineStart = MENU_CONTENT_OFFSET\r\n\r\n        MenuContent.forEach((line) => {\r\n            context.font = line.font\r\n            context.fillText(line.text, CANVAS_WIDTH / 3, lineStart)\r\n            lineStart += line.lining\r\n        })\r\n\r\n        context.font = CREDITS_FONT\r\n        context.textAlign = CREDITS_ALIGNMENT\r\n        Credits.forEach((text, index) => {\r\n            context.fillText(text, CREDITS_PADDING, CREDITS_POSITION - (3 - index) * CREDITS_PADDING)\r\n        })\r\n\r\n        context.restore()\r\n    }\r\n\r\n    /**\r\n     * Updates current states of game world\r\n     *\r\n     * @param {number} elapsedTime Time elapsed after last cycle\r\n     */\r\n    update(elapsedTime) {\r\n        // intentionally left blank\r\n    }\r\n\r\n    /**\r\n     * Handles the change in user input\r\n     */\r\n    handleInput() {\r\n        if(!___WEBPACK_IMPORTED_MODULE_1__[\"prevInput\"].menu && ___WEBPACK_IMPORTED_MODULE_1__[\"currInput\"].menu) {\r\n            Object(___WEBPACK_IMPORTED_MODULE_1__[\"switchState\"])(this.prevState)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles situation when spaceship gets destroyed\r\n     */\r\n    handleGameEnd() {\r\n        // intentionally left blank\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/game_states/menu.js?");

/***/ }),

/***/ "./src/game_states/play.js":
/*!*********************************!*\
  !*** ./src/game_states/play.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Play; });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./src/game_states/base.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ \"./src/index.js\");\n/* harmony import */ var _menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./menu */ \"./src/game_states/menu.js\");\n/* harmony import */ var _preparing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./preparing */ \"./src/game_states/preparing.js\");\n/* harmony import */ var _end__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./end */ \"./src/game_states/end.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class Play\r\n *\r\n * Represents the play mode of the game\r\n */\r\nclass Play extends _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    /**\r\n     * Constructs base play mode\r\n     */\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    /**\r\n     * Procs timer on the state (called each game cycle)\r\n     */\r\n    act() {\r\n        if(Object(___WEBPACK_IMPORTED_MODULE_1__[\"isLevelCleared\"])()) {\r\n            Object(___WEBPACK_IMPORTED_MODULE_1__[\"switchState\"])(new _preparing__WEBPACK_IMPORTED_MODULE_3__[\"default\"]())\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles the change in user input\r\n     */\r\n    handleInput() {\r\n        if(!___WEBPACK_IMPORTED_MODULE_1__[\"prevInput\"].shoot && ___WEBPACK_IMPORTED_MODULE_1__[\"currInput\"].shoot) {\r\n            ___WEBPACK_IMPORTED_MODULE_1__[\"spaceShip\"].shoot()\r\n        }\r\n\r\n        if(___WEBPACK_IMPORTED_MODULE_1__[\"currInput\"].left) {\r\n            ___WEBPACK_IMPORTED_MODULE_1__[\"spaceShip\"].steerLeft()\r\n        }\r\n\r\n        if(___WEBPACK_IMPORTED_MODULE_1__[\"currInput\"].right) {\r\n            ___WEBPACK_IMPORTED_MODULE_1__[\"spaceShip\"].steerRight()\r\n        }\r\n\r\n        if(___WEBPACK_IMPORTED_MODULE_1__[\"currInput\"].warp) {\r\n            ___WEBPACK_IMPORTED_MODULE_1__[\"spaceShip\"].warp()\r\n        }\r\n\r\n        if(!___WEBPACK_IMPORTED_MODULE_1__[\"prevInput\"].menu && ___WEBPACK_IMPORTED_MODULE_1__[\"currInput\"].menu) {\r\n            Object(___WEBPACK_IMPORTED_MODULE_1__[\"switchState\"])(new _menu__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles situation when spaceship gets destroyed\r\n     */\r\n    handleGameEnd() {\r\n        Object(___WEBPACK_IMPORTED_MODULE_1__[\"switchState\"])(new _end__WEBPACK_IMPORTED_MODULE_4__[\"default\"]())\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/game_states/play.js?");

/***/ }),

/***/ "./src/game_states/preparing.js":
/*!**************************************!*\
  !*** ./src/game_states/preparing.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Preparing; });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./src/game_states/base.js\");\n/* harmony import */ var _play__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./play */ \"./src/game_states/play.js\");\n/* harmony import */ var _menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./menu */ \"./src/game_states/menu.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! .. */ \"./src/index.js\");\n/* harmony import */ var _animated_text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../animated_text */ \"./src/animated_text.js\");\n/* harmony import */ var _spaceship_states_invincible__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../spaceship_states/invincible */ \"./src/spaceship_states/invincible.js\");\n/* harmony import */ var _end__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./end */ \"./src/game_states/end.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ---------------------------------------- Constants ------------------------------------------- //\r\n\r\n/** Color of the text */\r\nconst TEXT_COLOR = 'white'\r\n\r\n/** Alignment of text */\r\nconst TEXT_ALIGNMENT = 'center'\r\n\r\n/** Font for the head items */\r\nconst HEAD_FONT = 'bold 72px Palatino'\r\n\r\n/** Vertical position of head items */\r\nconst HEAD_Y = (window.innerHeight - 95) / 2\r\n\r\n/** Font for the subhead items */\r\nconst SUB_FONT = 'bold 48px Palatino'\r\n\r\n/** Vertical position of subhead items */\r\nconst SUB_Y = HEAD_Y + 72\r\n\r\n/** Width of canvas */\r\nconst CANVAS_WIDTH = window.innerWidth - 20\r\n\r\n/** Drift of text in the middle */\r\nconst DRIFT = CANVAS_WIDTH * 2 / 21\r\n\r\n/** Offset to hide text from screen */\r\nconst OFFSET = CANVAS_WIDTH * 2 / 11\r\n\r\n/** Point in the middle of the screen for head items */\r\nconst POINT_MIDDLE_LEFT = CANVAS_WIDTH * 8 / 21\r\n\r\n/** Point in the middle of the screen */\r\nconst POINT_MIDDLE = CANVAS_WIDTH * 10 / 21\r\n\r\n/** Point in the middle of the screen for subhead items */\r\nconst POINT_MIDDLE_RIGHT = CANVAS_WIDTH * 11 / 21\r\n\r\n/** Time for the text to get to the middle of the screen */\r\nconst APPEARANCE_DELAY = 20\r\n\r\n/** Delay for texts to drift in the middle of the screen */\r\nconst DRIFT_DELAY = 240\r\n\r\n/** Time for the text to disappear from the middle of the screen */\r\nconst DISAPPEARANCE_DELAY = 20\r\n\r\n/** Time required for text to appear, drift and disappear */\r\nconst TEXT_DURATION = APPEARANCE_DELAY + DRIFT_DELAY + DISAPPEARANCE_DELAY\r\n\r\n/** Delay of score text (after level text) */\r\nconst SCORE_DELAY = 20\r\n\r\n/** Delay of ready text (after score disappearing) */\r\nconst READY_DELAY = SCORE_DELAY + TEXT_DURATION\r\n\r\n/** Time of the end of this animation */\r\nconst FINAL_TIME = READY_DELAY + TEXT_DURATION\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class Preparing\r\n *\r\n * Represents the state, when next level is preparing\r\n */\r\nclass Preparing extends _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    /**\r\n     * Constructs base play mode\r\n     */\r\n    constructor() {\r\n        super()\r\n\r\n        this.timer = FINAL_TIME\r\n        this.texts = prepareTexts()\r\n    }\r\n\r\n    /**\r\n     * Procs timer on the state (called each game cycle)\r\n     */\r\n    act() {\r\n        this.texts.forEach((text) => {\r\n            text.act()\r\n        })\r\n\r\n        if(this.timer > 0) {\r\n            this.timer -= 1\r\n        } else {\r\n            ___WEBPACK_IMPORTED_MODULE_3__[\"spaceShip\"].state = new _spaceship_states_invincible__WEBPACK_IMPORTED_MODULE_5__[\"default\"](___WEBPACK_IMPORTED_MODULE_3__[\"spaceShip\"])\r\n\r\n            Object(___WEBPACK_IMPORTED_MODULE_3__[\"createNextLevel\"])()\r\n            Object(___WEBPACK_IMPORTED_MODULE_3__[\"switchState\"])(new _play__WEBPACK_IMPORTED_MODULE_1__[\"default\"]())\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders the game world contents\r\n     *\r\n     * @param {number} elapsedTime Time elapsed after last cycle\r\n     */\r\n    render(elapsedTime, context) {\r\n        super.render(elapsedTime, context)\r\n\r\n        this.texts.forEach((text) => {\r\n            text.render(context)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Handles the change in user input\r\n     */\r\n    handleInput() {\r\n        if(!___WEBPACK_IMPORTED_MODULE_3__[\"prevInput\"].shoot && ___WEBPACK_IMPORTED_MODULE_3__[\"currInput\"].shoot) {\r\n            ___WEBPACK_IMPORTED_MODULE_3__[\"spaceShip\"].shoot()\r\n        }\r\n\r\n        if(___WEBPACK_IMPORTED_MODULE_3__[\"currInput\"].left) {\r\n            ___WEBPACK_IMPORTED_MODULE_3__[\"spaceShip\"].steerLeft()\r\n        }\r\n\r\n        if(___WEBPACK_IMPORTED_MODULE_3__[\"currInput\"].right) {\r\n            ___WEBPACK_IMPORTED_MODULE_3__[\"spaceShip\"].steerRight()\r\n        }\r\n\r\n        if(___WEBPACK_IMPORTED_MODULE_3__[\"currInput\"].warp) {\r\n            ___WEBPACK_IMPORTED_MODULE_3__[\"spaceShip\"].warp()\r\n        }\r\n\r\n        if(!___WEBPACK_IMPORTED_MODULE_3__[\"prevInput\"].menu && ___WEBPACK_IMPORTED_MODULE_3__[\"currInput\"].menu) {\r\n            Object(___WEBPACK_IMPORTED_MODULE_3__[\"switchState\"])(new _menu__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles situation when spaceship gets destroyed\r\n     */\r\n    handleGameEnd() {\r\n        Object(___WEBPACK_IMPORTED_MODULE_3__[\"switchState\"])(new _end__WEBPACK_IMPORTED_MODULE_6__[\"default\"]())\r\n    }\r\n}\r\n\r\n// ------------------------------------------ Inner --------------------------------------------- //\r\n\r\n/**\r\n * Prepares the texts, which should be shown\r\n */\r\nfunction prepareTexts() {\r\n    var levelText = new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"AnimatedText\"]('LEVEL ' + (___WEBPACK_IMPORTED_MODULE_3__[\"level\"] + 1), HEAD_FONT, TEXT_COLOR, TEXT_ALIGNMENT, HEAD_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](-OFFSET, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](POINT_MIDDLE_LEFT, APPEARANCE_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](POINT_MIDDLE_LEFT + DRIFT, DRIFT_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](CANVAS_WIDTH + OFFSET, DISAPPEARANCE_DELAY)\r\n    ])\r\n\r\n    var scoreText = new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"AnimatedText\"]('SCORE: ' + ___WEBPACK_IMPORTED_MODULE_3__[\"score\"], SUB_FONT, TEXT_COLOR, TEXT_ALIGNMENT, SUB_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](-OFFSET, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](-OFFSET, SCORE_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](POINT_MIDDLE_RIGHT, APPEARANCE_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](POINT_MIDDLE_RIGHT + DRIFT, DRIFT_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](CANVAS_WIDTH + OFFSET, DISAPPEARANCE_DELAY)\r\n    ])\r\n\r\n    var readyText = new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"AnimatedText\"]('READY', HEAD_FONT, TEXT_COLOR, TEXT_ALIGNMENT, HEAD_Y, [\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](-OFFSET, 0),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](-OFFSET, READY_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](POINT_MIDDLE, APPEARANCE_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](POINT_MIDDLE + DRIFT, DRIFT_DELAY),\r\n        new _animated_text__WEBPACK_IMPORTED_MODULE_4__[\"TextPathNode\"](CANVAS_WIDTH + OFFSET, DISAPPEARANCE_DELAY)\r\n    ])\r\n\r\n    return [levelText, scoreText, readyText]\r\n}\n\n//# sourceURL=webpack:///./src/game_states/preparing.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: CANVAS_DISPLAY_BAR_HEIGHT, CanvasBounds, WarpBounds, prevInput, currInput, spaceShip, score, level, state, getMaxAsteroidSize, iterateOverGameObjects, pickRandomLocation, actObjects, spawn, createNextLevel, isLevelCleared, restartGame, handleBorderCrossing, handleCollisions, switchState, gameLoop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CANVAS_DISPLAY_BAR_HEIGHT\", function() { return CANVAS_DISPLAY_BAR_HEIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CanvasBounds\", function() { return CanvasBounds; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WarpBounds\", function() { return WarpBounds; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prevInput\", function() { return prevInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"currInput\", function() { return currInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"spaceShip\", function() { return spaceShip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"score\", function() { return score; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"level\", function() { return level; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"state\", function() { return state; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMaxAsteroidSize\", function() { return getMaxAsteroidSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateOverGameObjects\", function() { return iterateOverGameObjects; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pickRandomLocation\", function() { return pickRandomLocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"actObjects\", function() { return actObjects; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"spawn\", function() { return spawn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNextLevel\", function() { return createNextLevel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLevelCleared\", function() { return isLevelCleared; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"restartGame\", function() { return restartGame; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"handleBorderCrossing\", function() { return handleBorderCrossing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"handleCollisions\", function() { return handleCollisions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"switchState\", function() { return switchState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"gameLoop\", function() { return gameLoop; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector */ \"./src/vector.js\");\n/* harmony import */ var _objects_game_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./objects/game_object */ \"./src/objects/game_object.js\");\n/* harmony import */ var _objects_spaceship__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./objects/spaceship */ \"./src/objects/spaceship.js\");\n/* harmony import */ var _objects_asteroid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./objects/asteroid */ \"./src/objects/asteroid.js\");\n/* harmony import */ var _objects_ufo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./objects/ufo */ \"./src/objects/ufo.js\");\n/* harmony import */ var _game_states_play__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./game_states/play */ \"./src/game_states/play.js\");\n/* harmony import */ var _game_states_preparing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./game_states/preparing */ \"./src/game_states/preparing.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ----------------------------------------------- Constants --------------------------------------------------- //\r\n\r\n/** Color of background */\r\nconst BACKGROUND_COLOR = 'black'\r\n\r\n/** Default font of canvas */\r\nconst CANVAS_FONT = 'bold 21px Palatino'\r\n\r\n/** Height of border of display bar */\r\nconst CANVAS_DISPLAY_BORDER_HEIGHT = 5\r\n\r\n/** Color of display bar border */\r\nconst CANVAS_DISPLAY_BORDER_COLOR = 'blue'\r\n\r\n/** Height of complete display bar */\r\nconst CANVAS_DISPLAY_BAR_HEIGHT = 70 + CANVAS_DISPLAY_BORDER_HEIGHT\r\n\r\n/** Color of display bar */\r\nconst CANVAS_DISPLAY_BAR_COLOR = 'grey'\r\n\r\n/** Text dimensions */\r\nconst CANVAS_TEXT_PADDING = 35\r\nconst CANVAS_TEXT_LINING = 25\r\nconst WARP_TEXT_WIDTH = 60\r\n\r\n/** Canvas dimensions */\r\nconst CANVAS_PADDING = 50\r\nconst CANVAS_WARP_PADDING = -10\r\n\r\nconst CANVAS_WIDTH = window.innerWidth + 2 * CANVAS_WARP_PADDING\r\nconst CANVAS_HEIGHT = window.innerHeight + 2 * CANVAS_WARP_PADDING\r\n\r\n/** Canvas layout content bounds */\r\nconst CanvasBounds = {\r\n    left: CANVAS_PADDING,\r\n    right: CANVAS_WIDTH - CANVAS_PADDING,\r\n    top: CANVAS_PADDING,\r\n    bottom: CANVAS_HEIGHT - CANVAS_PADDING - CANVAS_DISPLAY_BAR_HEIGHT\r\n}\r\n\r\n/** Bounds for warping */\r\nconst WarpBounds = {\r\n    left: CANVAS_WARP_PADDING,\r\n    right: CANVAS_WIDTH - CANVAS_WARP_PADDING,\r\n    top: CANVAS_WARP_PADDING,\r\n    bottom: CANVAS_HEIGHT - CANVAS_WARP_PADDING - CANVAS_DISPLAY_BAR_HEIGHT\r\n}\r\n\r\n/** Number of asteroids in first level */\r\nconst INIT_ASTEROID_COUNT = 3\r\n\r\n/** Number of UFOs in first level */\r\nconst INIT_UFO_COUNT = 0\r\n\r\n/** Number of asteroids added each level */\r\nconst ASTEROID_LEVEL_ADDITION = 1\r\n\r\n/** Number of UFOs added each level */\r\nconst UFOS_LEVEL_ADDITION = 1 / 3\r\n\r\n/** Number of nodes added to asteroids' upper limit */\r\nconst ASTEROID_NODE_LEVEL_ADDITION = 1 / 2\r\n\r\n// ----------------------------------------------- Variables -------------------------------------------------- //\r\n\r\n/** Input from previous cycle */\r\nvar prevInput = {\r\n    left: false,\r\n    right: false,\r\n\r\n    shoot: false,\r\n    warp: false,\r\n\r\n    menu: false,\r\n    restart: false\r\n}\r\n\r\n/** Input from current cycle */\r\nvar currInput = {\r\n    left: false,\r\n    right: false,\r\n\r\n    shoot: false,\r\n    warp: false,\r\n\r\n    menu: false,\r\n    restart: false\r\n}\r\n\r\n/** Initial time of game cycle */\r\nvar initialTime = null\r\n\r\n/** The foreground canvas used for rendering */\r\nvar fgCanvas = createCanvas()\r\nvar fgcCtx = fgCanvas.getContext('2d')\r\n\r\n/** The background canvas used for pre-computation */\r\nvar bgCanvas = createCanvas()\r\nvar bgcCtx = bgCanvas.getContext('2d')\r\n\r\n/** Default font of game */\r\nbgcCtx.font = CANVAS_FONT\r\n\r\n/** Player-controlled spaceship */\r\nvar spaceShip = new _objects_spaceship__WEBPACK_IMPORTED_MODULE_2__[\"SpaceShip\"](new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](CANVAS_WIDTH/2, CANVAS_HEIGHT/2))\r\n\r\n/** Array of currently active bullets */\r\nvar bullets = []\r\n\r\n/** Array of currently active asteroids */\r\nvar asteroids = []\r\n\r\n/** Array of currently active UFOs */\r\nvar ufos = []\r\n\r\n/** Currently allowed maximal number of asteroid nodes */\r\nvar maxAsteroidNodes = _objects_asteroid__WEBPACK_IMPORTED_MODULE_3__[\"AsteroidNodes\"].min\r\n\r\n/** Current score of player */\r\nvar score = 0\r\n\r\n/** Current level number */\r\nvar level = 0\r\n\r\n/** State the game is currently in */\r\nvar state = new _game_states_play__WEBPACK_IMPORTED_MODULE_5__[\"default\"]()\r\n\r\n// ------------------------------------------------- Utils -------------------------------------------------- //\r\n\r\n/**\r\n * @function clone\r\n *\r\n * Creates a deep copy of given object\r\n *\r\n * @param {any} object Object which deep copy should be created\r\n */\r\nfunction clone(object) {\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\n/**\r\n * Increases player score by given @param amount\r\n *\r\n * @param {Number} amount Amount of points to add to score\r\n */\r\nfunction increaseScore(amount) {\r\n    score += Math.floor(amount)\r\n}\r\n\r\n/**\r\n * Retrieves the current maximal asteroid size (in nodes)\r\n */\r\nfunction getMaxAsteroidSize() {\r\n    return maxAsteroidNodes\r\n}\r\n\r\n/**\r\n * @function createCanvas\r\n *\r\n * Creates canvas with predetermined dimensions\r\n *\r\n * @returns Created canvas\r\n */\r\nfunction createCanvas() {\r\n    var canvas = document.createElement('canvas')\r\n\r\n    canvas.width = CANVAS_WIDTH\r\n    canvas.height = CANVAS_HEIGHT\r\n\r\n    return canvas\r\n}\r\n\r\n/**\r\n * Calls given @param call function on all game objects\r\n *\r\n * @param {Function} call Function to be called on game objects. Can have parameters\r\n * of typical forEach ~ game object itself, its index and array itself\r\n */\r\nfunction iterateOverGameObjects(call) {\r\n    bullets.forEach((bullet, index, array) => {\r\n        call(bullet, index, array)\r\n    })\r\n\r\n    asteroids.forEach((asteroid, index, array) => {\r\n        call(asteroid, index, array)\r\n    })\r\n\r\n    ufos.forEach((ufo, index, array) => {\r\n        call(ufo, index, array)\r\n    })\r\n\r\n    call(spaceShip, 0, [spaceShip])\r\n}\r\n\r\n/**\r\n * Picks random location on game board\r\n *\r\n * @returns Random location on the game board\r\n */\r\nfunction pickRandomLocation() {\r\n    var x = CanvasBounds.left + Math.random() * (CanvasBounds.right - CanvasBounds.left)\r\n    var y = CanvasBounds.top + Math.random() * (CanvasBounds.bottom - CanvasBounds.top)\r\n\r\n    return new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](x, y)\r\n}\r\n\r\n// ------------------------------------------------ Acting --------------------------------------------------- //\r\n\r\n/**\r\n * Calls the @function act on all game objects\r\n */\r\nfunction actObjects() {\r\n    iterateOverGameObjects((object) => {\r\n        object.act()\r\n    })\r\n}\r\n\r\n/**\r\n * Adds given game object to appropriate collection\r\n *\r\n * @param {GameObject} object Object to be spawned\r\n */\r\nfunction spawn(object) {\r\n    switch(object.type) {\r\n        case _objects_game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].ASTEROID:\r\n            asteroids.push(object)\r\n            break\r\n\r\n        case _objects_game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].BULLET:\r\n            bullets.push(object)\r\n            break\r\n\r\n        case _objects_game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].UFO:\r\n            ufos.push(object)\r\n            break\r\n    }\r\n}\r\n\r\n/**\r\n * Increments the level number and spawns appopriate number of enemies\r\n */\r\nfunction createNextLevel() {\r\n    level += 1\r\n\r\n    var asteroidCount = Math.floor(INIT_ASTEROID_COUNT + level * ASTEROID_LEVEL_ADDITION)\r\n    var ufoCount = Math.floor(INIT_UFO_COUNT + level * UFOS_LEVEL_ADDITION)\r\n\r\n    maxAsteroidNodes = Math.min(_objects_asteroid__WEBPACK_IMPORTED_MODULE_3__[\"AsteroidNodes\"].max, Math.floor(_objects_asteroid__WEBPACK_IMPORTED_MODULE_3__[\"AsteroidNodes\"].min + level * ASTEROID_NODE_LEVEL_ADDITION)) \r\n\r\n    for(var i = 0; i < asteroidCount; i++) {\r\n        asteroids.push(new _objects_asteroid__WEBPACK_IMPORTED_MODULE_3__[\"default\"]())\r\n    }\r\n    \r\n    for(var i = 0; i < ufoCount; i++) {\r\n        ufos.push(new _objects_ufo__WEBPACK_IMPORTED_MODULE_4__[\"default\"]())\r\n    }\r\n}\r\n\r\n/**\r\n * Determines whether the current level has been cleared\r\n */\r\nfunction isLevelCleared() {\r\n    return asteroids.length == 0 && ufos.length == 0\r\n}\r\n\r\n/**\r\n * Sets all game variables to their initial state\r\n */\r\nfunction restartGame() {\r\n    spaceShip = new _objects_spaceship__WEBPACK_IMPORTED_MODULE_2__[\"SpaceShip\"](new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](CANVAS_WIDTH/2, CANVAS_HEIGHT/2))\r\n\r\n    level = 0\r\n    score = 0\r\n\r\n    asteroids = []\r\n    bullets = []\r\n    ufos = []\r\n\r\n    state = new _game_states_preparing__WEBPACK_IMPORTED_MODULE_6__[\"default\"]()\r\n}\r\n\r\n// ------------------------------------------------ Render --------------------------------------------------- //\r\n\r\n/**\r\n * Renders information bar\r\n *\r\n * @param {CanvasRenderingContext2D} context Context to draw with\r\n */\r\nfunction renderInfoBar(context) {\r\n    var displayBarTop = CANVAS_HEIGHT - CANVAS_DISPLAY_BAR_HEIGHT\r\n    renderBarBody(context, displayBarTop)\r\n\r\n    context.fillStyle = 'black'\r\n    renderScore(context, displayBarTop)\r\n    renderLevel(context, displayBarTop)\r\n    renderLives(context, displayBarTop)\r\n\r\n    renderAsteroidInfo(context, displayBarTop)\r\n    renderWarpInfo(context, displayBarTop)\r\n    renderUFOInfo(context, displayBarTop)\r\n}\r\n\r\n/**\r\n * Renders the body of information bar\r\n *\r\n * @param {CanvasRenderingContext2D} context Context to draw with\r\n * @param {Number} top The top of information bar\r\n */\r\nfunction renderBarBody(context, top) {\r\n    context.fillStyle = CANVAS_DISPLAY_BAR_COLOR\r\n    context.fillRect(0, top, CANVAS_WIDTH, top + CANVAS_DISPLAY_BAR_HEIGHT)\r\n\r\n    context.fillStyle = CANVAS_DISPLAY_BORDER_COLOR\r\n    context.fillRect(0, top, CANVAS_WIDTH, CANVAS_DISPLAY_BORDER_HEIGHT)\r\n}\r\n\r\n/**\r\n * Renders player's score\r\n *\r\n * @param {CanvasRenderingContext2D} context Context to draw with\r\n * @param {Number} top The top of information bar\r\n */\r\nfunction renderScore(context, top) {\r\n    context.textAlign = 'left'\r\n    context.fillText('SCORE: ' + score, CANVAS_TEXT_PADDING, top + CANVAS_TEXT_PADDING)\r\n}\r\n\r\n/**\r\n * Renders the information about current level\r\n *\r\n * @param {CanvasRenderingContext2D} context Context to draw with\r\n * @param {Number} top The top of information bar\r\n */\r\nfunction renderLevel(context, top) {\r\n    context.textAlign = 'center'\r\n    context.fillText('LEVEL ' + level, CANVAS_WIDTH / 2, top + CANVAS_TEXT_PADDING)\r\n}\r\n\r\n/**\r\n * Renders the information about remaining lives\r\n *\r\n * @param {CanvasRenderingContext2D} context Context to draw with\r\n * @param {Number} top The top of information bar\r\n */\r\nfunction renderLives(context, top) {\r\n    context.textAlign = 'right'\r\n    context.fillText('LIVES: ' + spaceShip.lives, CANVAS_WIDTH - CANVAS_TEXT_PADDING, top + CANVAS_TEXT_PADDING)\r\n}\r\n\r\n/**\r\n * Renders the information about remaining asteroids\r\n *\r\n * @param {CanvasRenderingContext2D} context Context to draw with\r\n * @param {Number} top The top of information bar\r\n */\r\nfunction renderAsteroidInfo(context, top) {\r\n    context.textAlign = 'left'\r\n    context.fillText('Asteroids: ' + asteroids.length, CANVAS_TEXT_PADDING, top + CANVAS_TEXT_PADDING + CANVAS_TEXT_LINING)\r\n}\r\n\r\n/**\r\n * Renders the information about warp cooldown\r\n *\r\n * @param {CanvasRenderingContext2D} context Context to draw with\r\n * @param {Number} top The top of information bar\r\n */\r\nfunction renderWarpInfo(context, top) {\r\n    context.save()\r\n\r\n    if(spaceShip.warpCooldown == 0) {\r\n        context.fillStyle = 'blue'\r\n    }\r\n\r\n    context.textAlign = 'center'\r\n    context.fillText('WARP', CANVAS_WIDTH / 2, top + CANVAS_TEXT_PADDING + CANVAS_TEXT_LINING)\r\n\r\n    var cooldownFraction = spaceShip.warpCooldown / _objects_spaceship__WEBPACK_IMPORTED_MODULE_2__[\"SPACESHIP_WARP_COOLDOWN\"]\r\n    var remainingBlock = WARP_TEXT_WIDTH * cooldownFraction\r\n\r\n    context.fillStyle = CANVAS_DISPLAY_BAR_COLOR\r\n    context.fillRect(CANVAS_WIDTH / 2 + WARP_TEXT_WIDTH / 2 - remainingBlock, top + CANVAS_TEXT_PADDING + 5,\r\n                        remainingBlock, CANVAS_TEXT_LINING)\r\n\r\n    context.restore()\r\n}\r\n\r\n/**\r\n * Renders the information about remaining ufos\r\n *\r\n * @param {CanvasRenderingContext2D} context Context to draw with\r\n * @param {Number} top The top of information bar\r\n */\r\nfunction renderUFOInfo(context, top) {\r\n    context.textAlign = 'right'\r\n    context.fillText('UFOs: ' + ufos.length, CANVAS_WIDTH - CANVAS_TEXT_PADDING, top + CANVAS_TEXT_PADDING + CANVAS_TEXT_LINING)\r\n}\r\n\r\n// ----------------------------------------------- Handlers -------------------------------------------------- //\r\n\r\n/**\r\n * Handles events associated with key being pressed\r\n *\r\n * @param {KeyEvent} event The event to be handled\r\n */\r\nfunction handleKeyDown(event) {\r\n    event.preventDefault()\r\n    switch(event.key) {\r\n        case 's':\r\n        case 'ArrowDown':\r\n        case ' ':\r\n            currInput.shoot = true\r\n            break\r\n\r\n        case 'a':\r\n        case 'ArrowLeft':\r\n            currInput.left = true\r\n            break\r\n\r\n        case 'd':\r\n        case 'ArrowRight':\r\n            currInput.right = true\r\n            break\r\n\r\n        case 'w':\r\n        case 'ArrowUp':\r\n            currInput.warp = true\r\n            break\r\n\r\n        case 'Escape':\r\n            currInput.menu = true\r\n            break\r\n\r\n        case 'r':\r\n            currInput.restart = true\r\n            break\r\n    }\r\n}\r\n\r\n/**\r\n * Handles events associated with key being released\r\n *\r\n * @param {KeyEvent} event The event to be handled\r\n */\r\nfunction handleKeyUp(event) {\r\n    event.preventDefault()\r\n    switch(event.key) {\r\n        case 's':\r\n        case 'ArrowDown':\r\n        case ' ':\r\n            currInput.shoot = false\r\n            break\r\n\r\n        case 'a':\r\n        case 'ArrowLeft':\r\n            currInput.left = false\r\n            break\r\n\r\n        case 'd':\r\n        case 'ArrowRight':\r\n            currInput.right = false\r\n            break\r\n\r\n        case 'w':\r\n        case 'ArrowUp':\r\n            currInput.warp = false\r\n            break\r\n\r\n        case 'Escape':\r\n            currInput.menu = false\r\n            break\r\n\r\n        case 'r':\r\n            currInput.restart = false\r\n            break\r\n    }\r\n}\r\n\r\n/**\r\n * Handles the change in user input\r\n */\r\nfunction handleInput() {\r\n    state.handleInput()\r\n}\r\n\r\n/**\r\n * Call the border-crossing handler on all game objects outside the game board borders\r\n */\r\nfunction handleBorderCrossing() {\r\n    iterateOverGameObjects((object) => {\r\n        if(object.isOutsideBounds(WarpBounds)) {\r\n            object.handleBorderCross(WarpBounds)\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * Handles collision between game objects\r\n */\r\nfunction handleCollisions() {\r\n    var objects = [spaceShip].concat(bullets).concat(asteroids).concat(ufos)\r\n\r\n    for(var objectIndex = 0; objectIndex < objects.length; objectIndex++) {\r\n        var object = objects[objectIndex]\r\n\r\n        for(var otherIndex = objectIndex + 1; otherIndex < objects.length; otherIndex++) {\r\n            var other = objects[otherIndex]\r\n\r\n            if(object.collidesWith(other)) {\r\n                object.handleCollision(other)\r\n\r\n                if(object.type != _objects_game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].ASTEROID || other.type != _objects_game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].ASTEROID) {\r\n                    other.handleCollision(object)\r\n                }\r\n            }\r\n\r\n            if(object.toDispose) {\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Switches the state of the game\r\n *\r\n * @param {GameState} newState New state of the game\r\n */\r\nfunction switchState(newState) {\r\n    state = newState\r\n}\r\n\r\n// ---------------------------------------------- Game Loop --------------------------------------------------- //\r\n\r\n/**\r\n * Updates current states of game world\r\n *\r\n * @param {number} elapsedTime Time elapsed after last cycle\r\n */\r\nfunction update(elapsedTime) {\r\n    handleInput()\r\n    state.update(elapsedTime)\r\n}\r\n\r\n/**\r\n * Renders the game world contents\r\n *\r\n * @param {number} elapsedTime Time elapsed after last cycle\r\n */\r\nfunction render(elapsedTime) {\r\n    bgcCtx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\r\n\r\n    bgcCtx.fillStyle = BACKGROUND_COLOR\r\n    bgcCtx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\r\n\r\n    state.render(elapsedTime, bgcCtx)\r\n\r\n    renderInfoBar(bgcCtx)\r\n\r\n    fgcCtx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\r\n    fgcCtx.drawImage(bgCanvas, 0, 0)\r\n}\r\n\r\n/**\r\n * Removes all game objects marked for disposal from game\r\n */\r\nfunction collectGarbage() {\r\n    iterateOverGameObjects((object, index, array) => {\r\n        if(object.toDispose) {\r\n            array.splice(index, 1)\r\n            increaseScore(object.score)\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * The main game loop (everything that is actually done is done here :) )\r\n *\r\n * @param {DomHighResTimestamp} timestamp Current system time of moment when this function was called\r\n */\r\nfunction gameLoop(timestamp) {\r\n    if(!initialTime) {\r\n        initialTime = timestamp\r\n    }\r\n\r\n    var elapsedTime = timestamp - initialTime\r\n    initialTime = timestamp\r\n\r\n    state.act()\r\n\r\n    update(elapsedTime)\r\n\r\n    collectGarbage()\r\n\r\n    render(elapsedTime)\r\n\r\n    if(spaceShip.toDispose) {\r\n        state.handleGameEnd()\r\n    }\r\n\r\n    prevInput = clone(currInput)\r\n    window.requestAnimationFrame(gameLoop)\r\n}\r\n\r\n// ------------------------------------------------- Program --------------------------------------------------- //\r\n\r\ndocument.body.appendChild(fgCanvas)\r\n\r\nwindow.addEventListener('keydown', handleKeyDown)\r\nwindow.addEventListener('keyup', handleKeyUp)\r\n\r\nwindow.requestAnimationFrame(gameLoop)\r\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/objects/asteroid.js":
/*!*********************************!*\
  !*** ./src/objects/asteroid.js ***!
  \*********************************/
/*! exports provided: AsteroidNodes, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AsteroidNodes\", function() { return AsteroidNodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Asteroid; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! .. */ \"./src/index.js\");\n/* harmony import */ var _game_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game_object */ \"./src/objects/game_object.js\");\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vector */ \"./src/vector.js\");\n\r\n\r\n\r\n\r\n// ---------------------------------------- Constants ------------------------------------------- //\r\n\r\n/** Enum determining initial asteroid speeds */\r\nconst AsteroidSpeed = {\r\n    min: 1.0,\r\n    max: 3.0\r\n}\r\n\r\n/** Limits of asteroids nodes */\r\nconst AsteroidNodes = {\r\n    min: 3,\r\n    max: 8\r\n}\r\n\r\n/** Amount of mass per node (limit) */\r\nconst ASTEROID_NODE_MASS = 100\r\n\r\n/** Minimal radius of asteroid */\r\nconst ASTEROID_MIN_RADIUS = 10.0\r\n\r\n/** Radius per node */\r\nconst ASTEROID_NODE_RADIUS = 5.0\r\n\r\n/** Lower viable limit of asteroid's mass */\r\nconst ASTEROID_MIN_MASS = 100\r\n\r\n/** Default color of an asteroid */\r\nconst ASTEROID_COLOR = 'grey'\r\n\r\n/** Delta for bumping to ensure objects won't be even touching */\r\nconst BUMP_DELTA = 1.0\r\n\r\n/** Angle of displacement of new asteroids */\r\nconst BREAK_DISPLACEMENT_ANGLE = Math.PI / 3.0\r\n\r\n/** Path to asteroid bump sound effect */\r\nconst ASTEROID_SFX = './sfx/asteroid.mp3'\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class Asteroid\r\n *\r\n * Represents an uncontrollable asteroid flying through space\r\n */\r\nclass Asteroid extends _game_object__WEBPACK_IMPORTED_MODULE_1__[\"GameObject\"] {\r\n\r\n    /**\r\n     * Constructs base asteroid\r\n     *\r\n     * @param {Vector} location Starting location of this asteroid\r\n     * @param {Vector} velocity Base velocity of this asteroid\r\n     * @param {Number} mass Initial mass of asteroid\r\n     */\r\n    constructor(location, velocity, mass) {\r\n        super(location, velocity, [], ASTEROID_COLOR, _game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].ASTEROID)\r\n\r\n        if(!location) {\r\n            this.location = Object(___WEBPACK_IMPORTED_MODULE_0__[\"pickRandomLocation\"])()\r\n        }\r\n\r\n        if(!velocity) {\r\n            this.velocity = _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].random()\r\n\r\n            this.speed = AsteroidSpeed.min + Math.random() * (AsteroidSpeed.max - AsteroidSpeed.min)\r\n            this.velocity.multiply(this.speed)\r\n        }\r\n\r\n        if(mass) {\r\n            this.mass = mass\r\n        } else {\r\n            this.mass = ASTEROID_MIN_MASS + Math.random() * (Object(___WEBPACK_IMPORTED_MODULE_0__[\"getMaxAsteroidSize\"])() - AsteroidNodes.min) * ASTEROID_NODE_MASS\r\n        }\r\n\r\n        this.score = this.mass\r\n        this.shape = calculateShape(this)\r\n    }\r\n\r\n    /**\r\n     * Handles situation, when game object leaves the bounds of game board\r\n     *\r\n     * @param {Dictionary} bounds Dictionary containing canvas warping bounds\r\n     */\r\n    handleBorderCross(bounds) {\r\n        this.warpBack(bounds)\r\n    }\r\n\r\n    /**\r\n     * Handles the collision with other game object\r\n     *\r\n     * @param {GameObject} other Game object this game object collided with\r\n     */\r\n    handleCollision(other) {\r\n        switch(other.type) {\r\n            case _game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].ASTEROID:\r\n                handleAsteroidCollision(this, other)\r\n                new Audio(ASTEROID_SFX).play()\r\n                break\r\n\r\n            case _game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].BULLET:\r\n            case _game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].UFO:\r\n                handleAsteroidDestruction(this)\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\n// ------------------------------------------ Inner --------------------------------------------- //\r\n\r\n/**\r\n * Claculates the shape of given @param asteroid based on its mas\r\n * \r\n * @param {Asteroid} asteroid Asteroid to compute shape for\r\n * @return New shape of given asteroid\r\n */\r\nfunction calculateShape(asteroid) {\r\n    var shape = []\r\n    var nodes = Math.floor(asteroid.mass / ASTEROID_MIN_MASS) + (AsteroidNodes.min - 1)\r\n\r\n    var radius = ASTEROID_MIN_RADIUS + ASTEROID_NODE_RADIUS * asteroid.mass / ASTEROID_NODE_MASS\r\n    var angleStep = 2 * Math.PI / nodes\r\n\r\n    var angle = 0\r\n    var baseVector = _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(new _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"](0.0, 1.0), radius)\r\n\r\n    for(var i = 0; i < nodes; i++) {\r\n        shape.push(_vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].rotate(baseVector, angle))\r\n        angle += angleStep\r\n    }\r\n\r\n    return shape\r\n}\r\n\r\n/**\r\n * Handles the collision of two asteroids\r\n *\r\n * @param {Asteroid} asteroid Asteroid to handle collision for\r\n * @param {Asteroid} other Other asteroid to handle collision for\r\n */\r\nfunction handleAsteroidCollision(asteroid, other) {\r\n    var axis = _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].subtract(other.location, asteroid.location)\r\n    axis.normalize()\r\n\r\n    bumpAway(asteroid, other, axis)\r\n    affectVelocities(asteroid, other)\r\n}\r\n\r\n/**\r\n * Bumps away two colliding asteroids so they won't be touching each other\r\n *\r\n * @param {Asteroid} asteroid Asteroid to bump away\r\n * @param {Asteroid} other Other asteroid to bump away\r\n * @param {Vector} axis Collision axis of asteroids\r\n */\r\nfunction bumpAway(asteroid, other, axis) {\r\n    var asteroidProjection = Object(_game_object__WEBPACK_IMPORTED_MODULE_1__[\"project\"])(asteroid.shape, asteroid.location, axis)\r\n    var otherProjection = Object(_game_object__WEBPACK_IMPORTED_MODULE_1__[\"project\"])(other.shape, other.location, axis)\r\n\r\n    var overlap\r\n    if(asteroidProjection.min <= otherProjection.min && otherProjection.min <= asteroidProjection.max) {\r\n        overlap = asteroidProjection.max - otherProjection.min\r\n    } else if (otherProjection.min <= asteroidProjection.min && asteroidProjection.min <= otherProjection.max) {\r\n        overlap = otherProjection.max - asteroidProjection.min\r\n    }\r\n\r\n    overlap += BUMP_DELTA\r\n\r\n    asteroid.location.add(_vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(axis, -overlap / 2))\r\n    other.location.add(_vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(axis, overlap / 2))\r\n}\r\n\r\n/**\r\n * Affects the velocities of colliding asteroids\r\n *\r\n * @param {Asteroid} asteroid Colliding asteroid\r\n * @param {Asteroid} other The other colliding asteroid\r\n */\r\nfunction affectVelocities(asteroid, other) {\r\n    var x = computeFinalVelocity(asteroid.velocity.x, asteroid.mass, other.velocity.x, other.mass)\r\n    var y = computeFinalVelocity(asteroid.velocity.y, asteroid.mass, other.velocity.y, other.mass)\r\n\r\n    asteroid.velocity = new _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"](x.asteroidFinal, y.asteroidFinal)\r\n    other.velocity = new _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"](x.otherFinal, y.otherFinal)\r\n}\r\n\r\n/**\r\n * Computes final velocity along given axis after collision\r\n *\r\n * @param {Number} aV Velocity of asteroid\r\n * @param {Number} aM Mass of asteroid\r\n * @param {Number} oV Velocity of the other asteroid\r\n * @param {Number} oM Mass of the other asteroid\r\n * @returns Tuple of final velocities\r\n */\r\nfunction computeFinalVelocity(aV, aM, oV, oM) {\r\n    var oVF = (2 * aM * aV + oM * oV - aM * oV) / (aM + oM)\r\n    var aVF = (oV - aV + oVF)\r\n\r\n    return{asteroidFinal: aVF, otherFinal: oVF}\r\n}\r\n\r\n/**\r\n * Handles the destruction process of an asteroid\r\n *\r\n * @param {Asteroid} asteroid Asteroid to be destructed\r\n */\r\nfunction handleAsteroidDestruction(asteroid) {\r\n    asteroid.toDispose = true\r\n\r\n    var newMass = asteroid.mass - ASTEROID_NODE_MASS\r\n    if(newMass < ASTEROID_MIN_MASS) {\r\n        return\r\n    }\r\n\r\n    var perpendicular = _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].perpendicular(asteroid.velocity)\r\n    perpendicular.add(asteroid.location)\r\n    perpendicular.normalize()\r\n\r\n    var newRadius = ASTEROID_MIN_RADIUS + ASTEROID_NODE_RADIUS * newMass / ASTEROID_NODE_MASS\r\n\r\n    var leftLocation = _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].add(asteroid.location, _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(perpendicular, -newRadius))\r\n    var rightLocation = _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].add(asteroid.location, _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(perpendicular, newRadius))\r\n\r\n    var leftBreakVelocity = _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].rotate(asteroid.velocity, -BREAK_DISPLACEMENT_ANGLE)\r\n    var rightBreakVelocity = _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].rotate(asteroid.velocity, BREAK_DISPLACEMENT_ANGLE)\r\n\r\n    var leftAsteroid = new Asteroid(leftLocation, leftBreakVelocity, newMass)\r\n    var rightAsteroid = new Asteroid(rightLocation, rightBreakVelocity, newMass)\r\n\r\n    Object(___WEBPACK_IMPORTED_MODULE_0__[\"spawn\"])(leftAsteroid)\r\n    Object(___WEBPACK_IMPORTED_MODULE_0__[\"spawn\"])(rightAsteroid)\r\n}\n\n//# sourceURL=webpack:///./src/objects/asteroid.js?");

/***/ }),

/***/ "./src/objects/bullet.js":
/*!*******************************!*\
  !*** ./src/objects/bullet.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Bullet; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vector */ \"./src/vector.js\");\n/* harmony import */ var _game_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game_object */ \"./src/objects/game_object.js\");\n\r\n\r\n\r\n// ---------------------------------------- Constants ------------------------------------------- //\r\n\r\n/** Initial speed of bullet */\r\nconst BULLET_SPEED = 12.0\r\n\r\n/** The shape of bullet */\r\nconst BULLET_SHAPE = [\r\n    new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2.0, 2.0),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](-2.0, 2.0),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](-2.0, -2.0),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"](2.0, -2.0)\r\n]\r\n\r\n/** Default color of the bullet */\r\nconst BULLET_COLOR = 'yellow'\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class Bullet\r\n *\r\n * Represents fired bullet on the game board\r\n */\r\nclass Bullet extends _game_object__WEBPACK_IMPORTED_MODULE_1__[\"GameObject\"] {\r\n\r\n    /**\r\n     * Contructs base bullet\r\n     *\r\n     * @param {Vector} location Location to spawn bullet on\r\n     * @param {Vector} velocity Base velocity vector of this bullet\r\n     */\r\n    constructor(location, velocity) {\r\n        super(location, _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].multiply(_vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].normalize(velocity), BULLET_SPEED), \r\n            _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].copyArray(BULLET_SHAPE), BULLET_COLOR, _game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].BULLET, 0)\r\n    }\r\n\r\n    /**\r\n     * Handles situation, when game object leaves the bounds of game board\r\n     *\r\n     * @param {Dictionary} bounds Dictionary containing canvas warping bounds\r\n     */\r\n    handleBorderCross(_) {\r\n        this.toDispose = true\r\n    }\r\n\r\n    /**\r\n     * Handles the collision with other game object\r\n     *\r\n     * @param {GameObject} other Game object this game object collided with\r\n     */\r\n    handleCollision(other) {\r\n        if(other.type != _game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].BULLET) {\r\n            this.toDispose = true\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/objects/bullet.js?");

/***/ }),

/***/ "./src/objects/game_object.js":
/*!************************************!*\
  !*** ./src/objects/game_object.js ***!
  \************************************/
/*! exports provided: ObjectTypes, GameObject, project */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ObjectTypes\", function() { return ObjectTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GameObject\", function() { return GameObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"project\", function() { return project; });\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vector */ \"./src/vector.js\");\n\r\n\r\n// ---------------------------------------- Constants ------------------------------------------- //\r\n\r\n/**\r\n * Represents enum holding possible game object types\r\n */\r\nconst ObjectTypes = {\r\n    ASTEROID: 0,\r\n    BULLET: 1,\r\n    SPACESHIP: 2,\r\n    UFO: 3\r\n}\r\n\r\n/** Number of frames between change of flickering states */\r\nconst FLICKER_RATE = 5\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class GameObject\r\n *\r\n * Contains base properties and methods common to all game objects\r\n */\r\nclass GameObject {\r\n\r\n    /**\r\n     * Constructs base game object\r\n     *\r\n     * @param {Vector} location Starting location of this game object\r\n     * @param {Vector} velocity Velocity of given game object\r\n     * @param {Array} shape Array of points giving shape to this game object\r\n     * @param {Text} color Color used for rendering this game object\r\n     * @param {ObjectType} type Type of game object\r\n     * @param {Number} number Score awarded after destruction\r\n     */\r\n    constructor(location, velocity, shape, color, type, score) {\r\n        if(this.constructor === GameObject) {\r\n            throw new TypeError('Class GameObject is abstract and should not be instantiated!')\r\n        }\r\n\r\n        this.location = location\r\n        this.velocity = velocity\r\n\r\n        this.shape = shape\r\n        this.type = type\r\n\r\n        this.score = score\r\n\r\n        this.toDispose = false\r\n        this.collidable = true\r\n\r\n        this.flickers = false\r\n\r\n        this.visible = true\r\n        this.flickerCount = FLICKER_RATE\r\n\r\n        if(color) {\r\n            this.color = color\r\n        } else {\r\n            this.color = 'white'\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rotates this game object by specified @param angle\r\n     *\r\n     * @param {number} angle Angle to rotate this game object by\r\n     */\r\n    rotate(angle) {\r\n        this.shape.forEach(point => {\r\n            point.rotate(angle);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Moves this game object to given @param location\r\n     *\r\n     * @param {Vector} location New location of this game object\r\n     */\r\n    moveTo(location) {\r\n        this.location = location\r\n    }\r\n\r\n    /**\r\n     * Moves this game object by given vector\r\n     *\r\n     * @param {Vector} vector Vector which should be added to game object's location\r\n     */\r\n    moveBy(vector) {\r\n        this.location.add(vector)\r\n    }\r\n\r\n    /**\r\n     * Sets the location of this game object to warped one\r\n     *\r\n     * @param {Dictionary} bounds Game board warping bounds\r\n     */\r\n    warpBack(bounds) {\r\n        this.location.x = warp(bounds.left, this.location.x, bounds.right)\r\n        this.location.y = warp(bounds.top, this.location.y, bounds.bottom)\r\n    }\r\n\r\n    /**\r\n     * Simulates the behavior of this game object during one frame\r\n     */\r\n    act() {\r\n        this.moveBy(this.velocity)\r\n        handleFlickering(this)\r\n    }\r\n\r\n    /**\r\n     * Handles situation, when game object leaves the bounds of game board\r\n     *\r\n     * @param {Dictionary} bounds Dictionary containing canvas warping bounds\r\n     */\r\n    handleBorderCross(bounds) {\r\n        throw new TypeError('Class ' + this.constructor.name + ' should override the \\'handleBorderCross\\' function')\r\n    }\r\n\r\n    /**\r\n     * Handles the collision with other game object\r\n     *\r\n     * @param {GameObject} other Game object this game object collided with\r\n     */\r\n    handleCollision(other) {\r\n        throw new TypeError('Class ' + this.constructor.name + ' should override the \\'handleCollision\\' function')\r\n    }\r\n\r\n    /**\r\n     * Renders this game object using given @param context\r\n     *\r\n     * @param {CanvasRenderingContext2D} context Context to draw with\r\n     */\r\n    render(context) {\r\n        if(!this.visible) {\r\n            return\r\n        }\r\n\r\n        var firstPoint = _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.location, this.shape[0])\r\n\r\n        context.save()\r\n        context.fillStyle = this.color\r\n        context.beginPath()\r\n\r\n        context.moveTo(firstPoint.x, firstPoint.y)\r\n        for(var i = 1; i < this.shape.length; i++) {\r\n            var nextPoint = _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(this.location, this.shape[i])\r\n            context.lineTo(nextPoint.x, nextPoint.y)\r\n        }\r\n\r\n        context.closePath()\r\n\r\n        context.stroke()\r\n        context.fill()\r\n\r\n        context.restore()\r\n    }\r\n\r\n    /**\r\n     * Checks whether does this game object collide with @param other\r\n     *\r\n     * @param {GameObject} other Other game object to check collision with\r\n     * @returns True in case game objects collide, false otherwise\r\n     */\r\n    collidesWith(other) {\r\n        if(!this.collidable || !other.collidable) {\r\n            return false\r\n        }\r\n\r\n        var axes = findAxes(this.shape).concat(findAxes(other.shape))\r\n        for(var i = 0; i < axes.length; i++) {\r\n            var thisProjection = project(this.shape, this.location, axes[i])\r\n            var otherProjection = project(other.shape, other.location, axes[i])\r\n\r\n            if(thisProjection.max < otherProjection.min || otherProjection.max < thisProjection.min) {\r\n                return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    /**\r\n     * Checks whether this game object is outside given @param bounds\r\n     *\r\n     * @param {Dictionary} bounds Bounds for location to be checked against\r\n     */\r\n    isOutsideBounds(bounds) {\r\n        return (this.location.x < bounds.left) ||\r\n                (bounds.right < this.location.x) ||\r\n                (this.location.y < bounds.top) ||\r\n                (bounds.bottom < this.location.y)\r\n    }\r\n}\r\n\r\n// ------------------------------------------ Inner --------------------------------------------- //\r\n\r\n/**\r\n * Finds axes for given @param shape (array of points)\r\n *\r\n * @param {Array} shape Array of points to find axes for\r\n * @returns Array of axes corresponding to given shape\r\n */\r\nfunction findAxes(shape) {\r\n    var axes = [];\r\n\r\n    shape.forEach((point, index) => {\r\n        var nextIndex = (index + 1 == shape.length) ? 0 : index + 1\r\n        var nextPoint = shape[nextIndex]\r\n\r\n        var axis = _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtract(nextPoint, point)\r\n        axis.perpendiculate()\r\n        axis.normalize()\r\n        axes.push(axis)\r\n    })\r\n\r\n    return axes\r\n}\r\n\r\n/**\r\n * Projects @param shape of game object onto given @param axis\r\n *\r\n * @param {Array} shape Array of points of game object to be projected\r\n * @param {Vector} location Location of shape\r\n * @param {Vector} axis Axis to project game object onto\r\n * @returns Tuple containing bounds of projection of game object\r\n */\r\nfunction project(shape, location, axis) {\r\n    var min = _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dotProduct(_vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(shape[0], location), axis)\r\n    var max = min\r\n\r\n    for(var i = 1; i < shape.length; i++) {\r\n        var projection = _vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dotProduct(_vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(shape[i], location), axis)\r\n        if(projection < min) {\r\n            min = projection\r\n        } else if(max < projection) {\r\n            max = projection\r\n        }\r\n    }\r\n\r\n    return {min: min, max: max}\r\n}\r\n\r\n/**\r\n * Warps value into given bounds\r\n *\r\n * @param {Number} min Minimal valid value for warping\r\n * @param {Number} position Currect object position (1D)\r\n * @param {Number} max Maximal valid value for warping\r\n * @returns Warped value of position\r\n */\r\nfunction warp(min, position, max) {\r\n    if(position < min) {\r\n        return max - (min - position)\r\n    } else if(max < position) {\r\n        return min + (position - max)\r\n    } else {\r\n        return position\r\n    }\r\n}\r\n\r\n/**\r\n * Handles the flickering effect for game object\r\n *\r\n * @param {GameObject} gameObject The object to handle flickering for\r\n */\r\nfunction handleFlickering(gameObject) {\r\n    if(gameObject.flickers) {\r\n        if(gameObject.flickerCount > 0) {\r\n            gameObject.flickerCount -= 1\r\n        } else {\r\n            gameObject.visible = !gameObject.visible\r\n            gameObject.flickerCount = FLICKER_RATE\r\n        }\r\n    } else {\r\n        gameObject.visible = true\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/objects/game_object.js?");

/***/ }),

/***/ "./src/objects/spaceship.js":
/*!**********************************!*\
  !*** ./src/objects/spaceship.js ***!
  \**********************************/
/*! exports provided: SPACESHIP_COLOR, SPACESHIP_WARPING_COLOR, SPACESHIP_INVINCIBLE_DURATION, SPACESHIP_TIME_TO_WARP, SPACESHIP_WARP_COOLDOWN, SpaceShip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SPACESHIP_COLOR\", function() { return SPACESHIP_COLOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SPACESHIP_WARPING_COLOR\", function() { return SPACESHIP_WARPING_COLOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SPACESHIP_INVINCIBLE_DURATION\", function() { return SPACESHIP_INVINCIBLE_DURATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SPACESHIP_TIME_TO_WARP\", function() { return SPACESHIP_TIME_TO_WARP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SPACESHIP_WARP_COOLDOWN\", function() { return SPACESHIP_WARP_COOLDOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpaceShip\", function() { return SpaceShip; });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! .. */ \"./src/index.js\");\n/* harmony import */ var _game_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game_object */ \"./src/objects/game_object.js\");\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vector */ \"./src/vector.js\");\n/* harmony import */ var _bullet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bullet */ \"./src/objects/bullet.js\");\n/* harmony import */ var _spaceship_states_alive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../spaceship_states/alive */ \"./src/spaceship_states/alive.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n// ---------------------------------------- Constants ------------------------------------------- //\r\n\r\n/** Initial speed of spaceship */\r\nconst SPACESHIP_SPEED = 4.0\r\n\r\n/** Initial direction of spaceship */\r\nconst SPACESHIP_DIRECTION = new _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"](0.0, 1.0)\r\n\r\n/** The shape of spaceship */\r\nconst SPACESHIP_SHAPE = [\r\n    new _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"](0.0, 15.0),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"](10.0, -5.0),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"](10.0, -15.0),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"](0.0, -5.0),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"](-10.0, -15.0),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"](-10.0, -5.0)\r\n]\r\n\r\n/** Default color of the spaceship */\r\nconst SPACESHIP_COLOR = 'red'\r\n\r\n/** Color of spaceship while warping */\r\nconst SPACESHIP_WARPING_COLOR = 'blue'\r\n\r\n/** Time required for spaceship to warp */\r\nconst SPACESHIP_INVINCIBLE_DURATION = 180\r\n\r\n/** Time required for spaceship to warp */\r\nconst SPACESHIP_TIME_TO_WARP = 120\r\n\r\n/** Cooldown before warping */\r\nconst SPACESHIP_WARP_COOLDOWN = 600\r\n\r\n/** Base number of lives of spaceship */\r\nconst SPACESHIP_LIVES = 3\r\n\r\n/** Steering factor of spaceship - currently 2° */\r\nconst SPACESHIP_STEERING_ANGLE = Math.PI / 90.0\r\n\r\n/** Multiplier of velocity vector for bullet spawn */\r\nconst SPACESHIP_BULLET_SPAWN_MULT = 1.2\r\n\r\n/** Path to spaceship explosion sound effect */\r\nconst SPACESHIP_EXPLOSION_SFX = './sfx/mayday.wav'\r\n\r\n/** Path to warping sound effect */\r\nconst SPACESHIP_WARP_SFX = './sfx/warp.wav'\r\n\r\n/** Path to bullet being fired sound effect */\r\nconst BULLET_SFX = './sfx/laser.wav'\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class SpaceShip\r\n *\r\n * Represents player-controlled spaceship\r\n */\r\nclass SpaceShip extends _game_object__WEBPACK_IMPORTED_MODULE_1__[\"GameObject\"] {\r\n\r\n    /**\r\n     * Contructs base spaceship\r\n     *\r\n     * @param {Vector} location Location to spawn spaceship on\r\n     */\r\n    constructor(location) {\r\n        super(location, _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(SPACESHIP_DIRECTION, SPACESHIP_SPEED),\r\n                _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].copyArray(SPACESHIP_SHAPE), SPACESHIP_COLOR, _game_object__WEBPACK_IMPORTED_MODULE_1__[\"ObjectTypes\"].SPACESHIP, 0)\r\n\r\n        this.lives = SPACESHIP_LIVES\r\n        this.warpCooldown = SPACESHIP_WARP_COOLDOWN\r\n\r\n        this.state = new _spaceship_states_alive__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this)\r\n    }\r\n\r\n    /**\r\n     * Steers the spaceship to the left\r\n     */\r\n    steerLeft() {\r\n        steer(this, -SPACESHIP_STEERING_ANGLE)\r\n    }\r\n\r\n    /**\r\n     * Steers the spaceship to the right\r\n     */\r\n    steerRight() {\r\n        steer(this, SPACESHIP_STEERING_ANGLE)\r\n    }\r\n\r\n    /**\r\n     * Shoots a bullet from the front of this spaceship\r\n     */\r\n    shoot() {\r\n        var position = _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].add(this.location, _vector__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multiply(this.shape[0], SPACESHIP_BULLET_SPAWN_MULT))\r\n        Object(___WEBPACK_IMPORTED_MODULE_0__[\"spawn\"])(new _bullet__WEBPACK_IMPORTED_MODULE_3__[\"default\"](position, this.velocity))\r\n        new Audio(BULLET_SFX).play()\r\n    }\r\n\r\n    /**\r\n     * Starts warping process\r\n     */\r\n    warp() {\r\n        this.state.warp()\r\n        new Audio(SPACESHIP_WARP_SFX).play()\r\n    }\r\n\r\n    /**\r\n     * Simulates the behavior of this spaceship during one frame\r\n     */\r\n    act() {\r\n        super.act()\r\n        this.state.act()\r\n    }\r\n\r\n    /**\r\n     * Handles situation, when game object leaves the bounds of game board\r\n     *\r\n     * @param {Dictionary} bounds Dictionary containing canvas warping bounds\r\n     */\r\n    handleBorderCross(bounds) {\r\n        this.warpBack(bounds)\r\n    }\r\n\r\n    /**\r\n     * Handles the collision with other game object\r\n     *\r\n     * @param {GameObject} other Game object this game object collided with\r\n     */\r\n    handleCollision(other) {\r\n        this.state.handleCollision(other)\r\n        new Audio(SPACESHIP_EXPLOSION_SFX).play()\r\n    }\r\n\r\n    /**\r\n     * Renders this game object using given @param context\r\n     *\r\n     * @param {CanvasRenderingContext2D} context Context to draw with\r\n     */\r\n    render(context) {\r\n        super.render(context)\r\n        this.state.render(context)\r\n    }\r\n}\r\n\r\n// ------------------------------------------ Inner --------------------------------------------- //\r\n\r\n/**\r\n * Steers @param spaceship by given @param angle\r\n *\r\n * @param {SpaceShip} spaceship Spaceship to be steered\r\n */\r\nfunction steer(spaceship, angle) {\r\n    spaceship.velocity.rotate(angle)\r\n    spaceship.rotate(angle)\r\n}\n\n//# sourceURL=webpack:///./src/objects/spaceship.js?");

/***/ }),

/***/ "./src/objects/ufo.js":
/*!****************************!*\
  !*** ./src/objects/ufo.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return UFO; });\n/* harmony import */ var _game_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game_object */ \"./src/objects/game_object.js\");\n/* harmony import */ var _vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vector */ \"./src/vector.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! .. */ \"./src/index.js\");\n/* harmony import */ var _bullet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bullet */ \"./src/objects/bullet.js\");\n\r\n\r\n\r\n\r\n\r\n// ---------------------------------------- Constants ------------------------------------------- //\r\n\r\n/** Initial speed of UFO */\r\nconst UFO_SPEED = 2.5\r\n\r\n/** Number of frames before UFO can react again */\r\nconst UFO_REACTION_TIME = 40\r\n\r\n/** Score awarded for destroying UFO */\r\nconst UFO_SCORE = 1000\r\n\r\n/** Multiplier of velocity vector for bullet spawn */\r\nconst UFO_BULLET_SPAWN_MULT = 5.0\r\n\r\n/** Color of UFO's inner shape */\r\nconst UFO_INNER_COLOR = 'white'\r\n\r\n/** Sizes of UFO rings */\r\nconst UFOSize = {\r\n    inner: 2.5,\r\n    outer: 7.5\r\n}\r\n\r\n/** The inner shape of UFO */\r\nconst UFO_INNER_SHAPE = [\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](UFOSize.inner, -2 * UFOSize.inner),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](2 * UFOSize.inner, -UFOSize.inner),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](2 * UFOSize.inner, UFOSize.inner),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](UFOSize.inner, 2 * UFOSize.inner),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-UFOSize.inner, 2 * UFOSize.inner),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-2 * UFOSize.inner, UFOSize.inner),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-2 * UFOSize.inner, -UFOSize.inner),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-UFOSize.inner, -2 * UFOSize.inner)\r\n]\r\n\r\n/** Color of UFO's outer shape */\r\nconst UFO_OUTER_COLOR = 'yellow'\r\n\r\n/** The outer shape of UFO */\r\nconst UFO_OUTER_SHAPE = [\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](UFOSize.outer, -2 * UFOSize.outer),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](2 * UFOSize.outer, -UFOSize.outer),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](2 * UFOSize.outer, UFOSize.outer),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](UFOSize.outer, 2 * UFOSize.outer),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-UFOSize.outer, 2 * UFOSize.outer),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-2 * UFOSize.outer, UFOSize.outer),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-2 * UFOSize.outer, -UFOSize.outer),\r\n    new _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"](-UFOSize.outer, -2 * UFOSize.outer)\r\n]\r\n\r\n/** Path to UFO explosion sound effect */\r\nconst UFO_EXPLOSION_SFX = './sfx/explosion.wav'\r\n\r\n/** Path to bullet being fired sound effect */\r\nconst BULLET_SFX = './sfx/laser.wav'\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class UFO\r\n *\r\n * Represents enemy fighter trying to shoot down player spaceship\r\n */\r\nclass UFO extends _game_object__WEBPACK_IMPORTED_MODULE_0__[\"GameObject\"] {\r\n\r\n    /**\r\n     * Constructs base UFO\r\n     *\r\n     * @param {Vector} location Starting location of this UFO\r\n     * @param {Vector} velocity Base velocity of this UFO\r\n     */\r\n    constructor(location, velocity) {\r\n        super(location, velocity, _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"].copyArray(UFO_OUTER_SHAPE),\r\n            UFO_OUTER_COLOR, _game_object__WEBPACK_IMPORTED_MODULE_0__[\"ObjectTypes\"].UFO, UFO_SCORE)\r\n\r\n        if(!location) {\r\n            this.location = Object(___WEBPACK_IMPORTED_MODULE_2__[\"pickRandomLocation\"])()\r\n        }\r\n\r\n        if(!velocity) {\r\n            this.velocity = _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"].random()\r\n            this.velocity.multiply(UFO_SPEED)\r\n        }\r\n\r\n        this.innerShape = _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"].copyArray(UFO_INNER_SHAPE)\r\n        this.reactionTimer = UFO_REACTION_TIME\r\n    }\r\n\r\n    /**\r\n     * Simulates the behavior of this spaceship during one frame\r\n     */\r\n    act() {\r\n        super.act()\r\n\r\n        if(this.reactionTimer > 0) {\r\n            this.reactionTimer -= 1\r\n        } else {\r\n            var wayToPlayer = _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtract(___WEBPACK_IMPORTED_MODULE_2__[\"spaceShip\"].location, this.location)\r\n            wayToPlayer.normalize()\r\n\r\n            this.velocity = _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(wayToPlayer, UFO_SPEED)\r\n            this.shoot(wayToPlayer)\r\n\r\n            this.reactionTimer = UFO_REACTION_TIME\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Shoots a bullet after player spaceship\r\n     *\r\n     * @param {Vector} wayToPlayer Vector to player spaceship\r\n     */\r\n    shoot(wayToPlayer) {\r\n        var bulletWay = _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"].multiply(wayToPlayer, UFOSize.outer * UFO_BULLET_SPAWN_MULT)\r\n        var bulletLocation = _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.location, bulletWay)\r\n\r\n        Object(___WEBPACK_IMPORTED_MODULE_2__[\"spawn\"])(new _bullet__WEBPACK_IMPORTED_MODULE_3__[\"default\"](bulletLocation, wayToPlayer))\r\n        new Audio(BULLET_SFX).play()\r\n    }\r\n\r\n    /**\r\n     * Handles situation, when game object leaves the bounds of game board\r\n     *\r\n     * @param {Dictionary} bounds Dictionary containing canvas warping bounds\r\n     */\r\n    handleBorderCross(bounds) {\r\n        this.warpBack(bounds)\r\n    }\r\n\r\n    /**\r\n     * Handles the collision with other game object\r\n     *\r\n     * @param {GameObject} other Game object this game object collided with\r\n     */\r\n    handleCollision(other) {\r\n        switch(other.type) {\r\n            case _game_object__WEBPACK_IMPORTED_MODULE_0__[\"ObjectTypes\"].ASTEROID:\r\n            case _game_object__WEBPACK_IMPORTED_MODULE_0__[\"ObjectTypes\"].BULLET:\r\n                this.toDispose = true\r\n                new Audio(UFO_EXPLOSION_SFX).play()\r\n                break\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders this game object using given @param context\r\n     *\r\n     * @param {CanvasRenderingContext2D} context Context to draw with\r\n     */\r\n    render(context) {\r\n        super.render(context)\r\n\r\n        var firstPoint = _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.location, this.innerShape[0])\r\n\r\n        context.save()\r\n        context.fillStyle = UFO_INNER_COLOR\r\n        context.beginPath()\r\n\r\n        context.moveTo(firstPoint.x, firstPoint.y)\r\n        for(var i = 1; i < this.shape.length; i++) {\r\n            var nextPoint = _vector__WEBPACK_IMPORTED_MODULE_1__[\"default\"].add(this.location, this.innerShape[i])\r\n            context.lineTo(nextPoint.x, nextPoint.y)\r\n        }\r\n\r\n        context.closePath()\r\n\r\n        context.stroke()\r\n        context.fill()\r\n\r\n        context.restore()\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/objects/ufo.js?");

/***/ }),

/***/ "./src/spaceship_states/alive.js":
/*!***************************************!*\
  !*** ./src/spaceship_states/alive.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SpaceShipAlive; });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./src/spaceship_states/base.js\");\n/* harmony import */ var _dead__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dead */ \"./src/spaceship_states/dead.js\");\n/* harmony import */ var _warping__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./warping */ \"./src/spaceship_states/warping.js\");\n/* harmony import */ var _invincible__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./invincible */ \"./src/spaceship_states/invincible.js\");\n\r\n\r\n\r\n\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class SpaceShipAlive\r\n *\r\n * Represents the default state of spaceship\r\n */\r\nclass SpaceShipAlive extends _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    /**\r\n     * Constructs default alive state\r\n     *\r\n     * @param {SpaceShip} spaceShip Reference to spaceship this state is attached to\r\n     */\r\n    constructor(spaceShip) {\r\n        super(spaceShip)\r\n\r\n        this.spaceShip.collidable = true\r\n        this.spaceShip.flickers = false\r\n    }\r\n\r\n    /**\r\n     * Procs timer on the state (called each game cycle)\r\n     */\r\n    act() {\r\n        if(this.spaceShip.warpCooldown > 0) {\r\n            this.spaceShip.warpCooldown -= 1\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Defines the behavior when spaceship is commanded to warp\r\n     */\r\n    warp() {\r\n        if(this.spaceShip.warpCooldown == 0) {\r\n            this.spaceShip.state = new _warping__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.spaceShip)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Defines the behavior when spaceship collides with @param object\r\n     *\r\n     * @param {GameObject} object Object which collided with spaceship\r\n     */\r\n    handleCollision(object) {\r\n        if(this.spaceShip.lives > 1) {\r\n            this.spaceShip.lives -= 1\r\n            this.spaceShip.state = new _invincible__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.spaceShip)\r\n        } else {\r\n            this.spaceShip.state = new _dead__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.spaceShip)\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/spaceship_states/alive.js?");

/***/ }),

/***/ "./src/spaceship_states/base.js":
/*!**************************************!*\
  !*** ./src/spaceship_states/base.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SpaceShipState; });\n/* harmony import */ var _objects_spaceship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../objects/spaceship */ \"./src/objects/spaceship.js\");\n\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class SpaceShipState\r\n *\r\n * Represents state of FSM of SpaceShip\r\n */\r\nclass SpaceShipState {\r\n\r\n    /**\r\n     * Constructs base state\r\n     *\r\n     * @param {SpaceShip} spaceShip Reference to spaceship this state is attached to\r\n     */\r\n    constructor(spaceShip) {\r\n        this.spaceShip = spaceShip\r\n    }\r\n\r\n    /**\r\n     * Procs timer on the state (called each game cycle)\r\n     */\r\n    act() {\r\n        throw new TypeError('State ' + this.constructor.name + ' should override the \\'act\\' function')\r\n    }\r\n\r\n    /**\r\n     * Defines the behavior when spaceship is commanded to warp\r\n     */\r\n    warp() {\r\n        throw new TypeError('State ' + this.constructor.name + ' should override the \\'warp\\' function')\r\n    }\r\n\r\n    /**\r\n     * Defines the behavior when spaceship collides with @param object\r\n     * \r\n     * @param {GameObject} object Object which collided with spaceship\r\n     */\r\n    handleCollision(object) {\r\n        throw new TypeError('State ' + this.constructor.name + ' should override the \\'handleCollision\\' function')\r\n    }\r\n\r\n    /**\r\n     * Renders additional assets associated with the state\r\n     *\r\n     * @param {CanvasRenderingContext2D} context Context to draw with \r\n     */\r\n    render(context) {\r\n        // intentionally left blank\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/spaceship_states/base.js?");

/***/ }),

/***/ "./src/spaceship_states/dead.js":
/*!**************************************!*\
  !*** ./src/spaceship_states/dead.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SpaceShipDead; });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./src/spaceship_states/base.js\");\n\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class SpaceShipDead\r\n *\r\n * Represents the state when spaceship is destroyed\r\n */\r\nclass SpaceShipDead extends _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    /**\r\n     * Constructs state when spaceship is destroyed\r\n     *\r\n     * @param {SpaceShip} spaceShip Reference to spaceship this state is attached to\r\n     */\r\n    constructor(spaceShip) {\r\n        super(spaceShip)\r\n\r\n        this.spaceShip.toDispose = true\r\n    }\r\n\r\n    /**\r\n     * Procs timer on the state (called each game cycle)\r\n     */\r\n    act() {\r\n        // intentionally left blank\r\n    }\r\n\r\n    /**\r\n     * Defines the behavior when spaceship is commanded to warp\r\n     */\r\n    warp() {\r\n        // intentionally left blank\r\n    }\r\n\r\n    /**\r\n     * Defines the behavior when spaceship collides with @param object\r\n     *\r\n     * @param {GameObject} object Object which collided with spaceship\r\n     */\r\n    handleCollision(object) {\r\n        // intentionally left blank\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/spaceship_states/dead.js?");

/***/ }),

/***/ "./src/spaceship_states/invincible.js":
/*!********************************************!*\
  !*** ./src/spaceship_states/invincible.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SpaceShipInvincible; });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./src/spaceship_states/base.js\");\n/* harmony import */ var _alive__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./alive */ \"./src/spaceship_states/alive.js\");\n/* harmony import */ var _warping__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./warping */ \"./src/spaceship_states/warping.js\");\n/* harmony import */ var _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../objects/spaceship */ \"./src/objects/spaceship.js\");\n\r\n\r\n\r\n\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class SpaceShipInvincible\r\n *\r\n * Represents the state when spaceship is invincible\r\n */\r\nclass SpaceShipInvincible extends _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    /**\r\n     * Constructs invincible state\r\n     *\r\n     * @param {SpaceShip} spaceShip Reference to spaceship this state is attached to\r\n     */\r\n    constructor(spaceShip) {\r\n        super(spaceShip)\r\n\r\n        this.timer = _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__[\"SPACESHIP_INVINCIBLE_DURATION\"]\r\n\r\n        this.spaceShip.collidable = false\r\n        this.spaceShip.flickers = true\r\n    }\r\n\r\n    /**\r\n     * Procs timer on the state (called each game cycle)\r\n     */\r\n    act() {\r\n        if(this.spaceShip.warpCooldown > 0) {\r\n            this.spaceShip.warpCooldown -= 1\r\n        }\r\n\r\n        if(this.timer > 0) {\r\n            this.timer -= 1\r\n        } else {\r\n            this.spaceShip.state = new _alive__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.spaceShip)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Defines the behavior when spaceship is commanded to warp\r\n     */\r\n    warp() {\r\n        if(this.spaceShip.warpCooldown > 0) {\r\n            this.spaceShip.warpCooldown -= 1\r\n        } else {\r\n            this.spaceShip.state = new _warping__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.spaceShip)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Defines the behavior when spaceship collides with @param object\r\n     *\r\n     * @param {GameObject} object Object which collided with spaceship\r\n     */\r\n    handleCollision(object) {\r\n        // intentionally left blank\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/spaceship_states/invincible.js?");

/***/ }),

/***/ "./src/spaceship_states/warping.js":
/*!*****************************************!*\
  !*** ./src/spaceship_states/warping.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SpaceShipWarping; });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./src/spaceship_states/base.js\");\n/* harmony import */ var _dead__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dead */ \"./src/spaceship_states/dead.js\");\n/* harmony import */ var _invincible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./invincible */ \"./src/spaceship_states/invincible.js\");\n/* harmony import */ var _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../objects/spaceship */ \"./src/objects/spaceship.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! .. */ \"./src/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n// ---------------------------------------- Constants ------------------------------------------- //\r\n\r\n/** Initial radius of warping portal */\r\nconst WARP_RADIUS_START = 1.0\r\n\r\n/** Final radius of warping portal */\r\nconst WARP_RADIUS_END = 20.0\r\n\r\n/** Width of portal ring */\r\nconst WARP_PORTAL_WIDTH = 5.0\r\n\r\n/** Color of the warping portal */\r\nconst WARP_PORTAL_COLOR = 'blue'\r\n\r\n// ------------------------------------------ Class --------------------------------------------- //\r\n\r\n/**\r\n * @class SpaceShipWarping\r\n *\r\n * Represents the state when spaceship undergoes warping\r\n */\r\nclass SpaceShipWarping extends _base__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n\r\n    /**\r\n     * Constructs warping state\r\n     *\r\n     * @param {SpaceShip} spaceShip Reference to spaceship this state is attached to\r\n     */\r\n    constructor(spaceShip) {\r\n        super(spaceShip)\r\n\r\n        this.spaceShip.color = _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__[\"SPACESHIP_WARPING_COLOR\"]\r\n\r\n        this.timer = _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__[\"SPACESHIP_TIME_TO_WARP\"]\r\n        this.cooldownStep = _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__[\"SPACESHIP_WARP_COOLDOWN\"] / _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__[\"SPACESHIP_TIME_TO_WARP\"]\r\n\r\n        this.radius = WARP_RADIUS_START\r\n        this.radiusStep = (WARP_RADIUS_END - WARP_RADIUS_START) / _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__[\"SPACESHIP_TIME_TO_WARP\"]\r\n\r\n        this.warpDestination = Object(___WEBPACK_IMPORTED_MODULE_4__[\"pickRandomLocation\"])()\r\n    }\r\n\r\n    /**\r\n     * Procs timer on the state (called each game cycle)\r\n     */\r\n    act() {\r\n        this.radius += this.radiusStep\r\n        this.spaceShip.warpCooldown += this.cooldownStep\r\n\r\n        if(this.timer > 0) {\r\n            this.timer -= 1\r\n        } else {\r\n            this.spaceShip.location = this.warpDestination\r\n            this.spaceShip.state = new _invincible__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.spaceShip)\r\n\r\n            this.spaceShip.color = _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__[\"SPACESHIP_COLOR\"]\r\n            this.spaceShip.warpCooldown = _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__[\"SPACESHIP_WARP_COOLDOWN\"]\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Defines the behavior when spaceship is commanded to warp\r\n     */\r\n    warp() {\r\n        // intentionally left blank\r\n    }\r\n\r\n    /**\r\n     * Defines the behavior when spaceship collides with @param object\r\n     *\r\n     * @param {GameObject} object Object which collided with spaceship\r\n     */\r\n    handleCollision(object) {\r\n        if(this.spaceShip.lives > 1) {\r\n            this.spaceShip.lives -= 1\r\n            this.spaceShip.state = new _invincible__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.spaceShip)\r\n\r\n            this.spaceShip.color = _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__[\"SPACESHIP_COLOR\"]\r\n            this.spaceShip.warpCooldown = _objects_spaceship__WEBPACK_IMPORTED_MODULE_3__[\"SPACESHIP_WARP_COOLDOWN\"]\r\n        } else {\r\n            this.spaceShip.state = new _dead__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.spaceShip)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders additional assets associated with the state\r\n     *\r\n     * @param {CanvasRenderingContext2D} context Context to draw with \r\n     */\r\n    render(context) {\r\n        context.save()\r\n\r\n        context.beginPath()\r\n        context.fillStyle = WARP_PORTAL_COLOR\r\n        context.arc(this.warpDestination.x, this.warpDestination.y,\r\n                this.radius, 0, 2 * Math.PI, true)\r\n        context.fill()\r\n        context.closePath()\r\n\r\n        context.beginPath()\r\n        context.fillStyle = 'black'\r\n        context.arc(this.warpDestination.x, this.warpDestination.y,\r\n                Math.max(0.0, this.radius - WARP_PORTAL_WIDTH), 0, 2 * Math.PI, true)\r\n        context.fill()\r\n        context.closePath()\r\n\r\n        context.restore()\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./src/spaceship_states/warping.js?");

/***/ }),

/***/ "./src/vector.js":
/*!***********************!*\
  !*** ./src/vector.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Vector; });\n\r\n/**\r\n * @class Vector\r\n *\r\n * Represents base class for handling 2D vectors\r\n */\r\nclass Vector {\r\n\r\n    /**\r\n     * Contructs base vector from given coordinates\r\n     *\r\n     * @param {number} x Vertical coordinate\r\n     * @param {number} y Horizontal coordinate\r\n     */\r\n    constructor(x, y) {\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n\r\n    // ---------------------------------- Static -------------------------------------- //\r\n\r\n    /**\r\n     * Adds @param first and @param second vectors\r\n     *\r\n     * @param {Vector} first First vector to be added\r\n     * @param {Vector} second Second vector to be added\r\n     * @returns Newly created vector as result of the addition\r\n     */\r\n    static add(first, second) {\r\n        return new Vector(first.x + second.x, first.y + second.y)\r\n    }\r\n\r\n    /**\r\n     * Subtracts @param second vector from @param first vector\r\n     *\r\n     * @param {Vector} first The first member of subtraction\r\n     * @param {Vector} second The subtracted vector\r\n     * @returns Newly created vector as result of the subtraction\r\n     */\r\n    static subtract(first, second) {\r\n        return new Vector(first.x - second.x, first.y - second.y)\r\n    }\r\n\r\n    /**\r\n     * Creates new multiplied (by @param multiplier) version of @param vector\r\n     *\r\n     * @param {Vector} vector Vector to be multiplied\r\n     * @param {Number} multiplier Number indicating how much should the vector get multiplied\r\n     * @returns Newly created multiplied version of given vector\r\n     */\r\n    static multiply(vector, multiplier) {\r\n        return new Vector(vector.x * multiplier, vector.y * multiplier)\r\n    }\r\n\r\n    /**\r\n     * Creates new normalized version of given @param vector\r\n     *\r\n     * @param {Vector} vector Original non-normalized vector\r\n     * @returns Newly created vector as normalized version of given one\r\n     */\r\n    static normalize(vector) {\r\n        var magnitude = vector.magnitude()\r\n        return new Vector(vector.x / magnitude, vector.y / magnitude)\r\n    }\r\n\r\n    /**\r\n     * Creates new rotated version (by @param angle) of given @param vector\r\n     *\r\n     * @param {Vector} vector Vector to create rotated version from\r\n     * @param {number} angle  Angle to rotate this vector by (in radians)\r\n     * @returns Newly created vector as rotated version of original one\r\n     */\r\n    static rotate(vector, angle) {\r\n        var sin = Math.sin(angle)\r\n        var cos = Math.cos(angle)\r\n\r\n        return new Vector(vector.x * cos - vector.y * sin, vector.x * sin + vector.y * cos)\r\n    }\r\n\r\n    /**\r\n     * Creates new vector which is perpendicular to given @param vector\r\n     * \r\n     * @param {Vector} vector Vector to create perpendicular vector to\r\n     * @returns Newly created perpendicular vector to given vector\r\n     */\r\n    static perpendicular(vector) {\r\n        return new Vector(-vector.y, vector.x)\r\n    }\r\n\r\n    /**\r\n     * Computes dot product of @param first and @param second given vector\r\n     *\r\n     * @param {Vector} first First member of dot product operation\r\n     * @param {Vector} second Second member of dot product operation\r\n     * @returns Dot product of given vectors\r\n     */\r\n    static dotProduct(first, second) {\r\n        return first.x * second.x + first.y * second.y\r\n    }\r\n\r\n    /**\r\n     * Computed magnitude of given @param vector\r\n     *\r\n     * @param {Vector} vector Vector to compute magnitude of\r\n     * @returns Magnitude of given vector\r\n     */\r\n    static magnitude(vector) {\r\n        return Math.sqrt(vector.x * vector.x + vector.y * vector.y)\r\n    }\r\n\r\n    /**\r\n     * Creates a deep copy of given array of @param vectors\r\n     *\r\n     * @param {Array} vectors Array of vectors to be copied\r\n     * @returns Copy of given array of vectors\r\n     */\r\n    static copyArray(vectors) {\r\n        var copy = []\r\n        vectors.forEach(vector => {\r\n            copy.push(new Vector(vector.x, vector.y))\r\n        });\r\n        return copy\r\n    }\r\n\r\n    /**\r\n     * Creates random normalized vector\r\n     *\r\n     * @returns New random normalized vector\r\n     */\r\n    static random() {\r\n        var x = -1.0 + Math.random() * 2\r\n        var y = -1.0 + Math.random() * 2\r\n\r\n        return Vector.normalize(new Vector(x, y))\r\n    }\r\n\r\n    // ---------------------------------- Member -------------------------------------- //\r\n\r\n    /**\r\n     * Adds given @param other vector to this vector\r\n     *\r\n     * @param {Vector} other Other vector to be added\r\n     */\r\n    add(other) {\r\n        this.x += other.x\r\n        this.y += other.y\r\n    }\r\n\r\n    /**\r\n     * Subtracts given @param other vector from this vector\r\n     *\r\n     * @param {Vector} other Other vector to be subtracted\r\n     */\r\n    subtract(other) {\r\n        this.x -= other.x\r\n        this.y -= other.y\r\n    }\r\n\r\n    /**\r\n     * Multiplies this vector by @param multiplier\r\n     *\r\n     * @param {Number} multiplier Number indicating how much should the vector get multiplied\r\n     */\r\n    multiply(multiplier) {\r\n        this.x *= multiplier\r\n        this.y *= multiplier\r\n    }\r\n\r\n    /**\r\n     * Normalizes this vector\r\n     */\r\n    normalize() {\r\n        var magnitude = this.magnitude()\r\n\r\n        this.x = this.x / magnitude\r\n        this.y = this.y / magnitude\r\n    }\r\n\r\n    /**\r\n     * Rotates this vector by given @param angle\r\n     *\r\n     * @param {number} angle Angle to rotate this vector by (in radians)\r\n     */\r\n    rotate(angle) {\r\n        var sin = Math.sin(angle)\r\n        var cos = Math.cos(angle)\r\n\r\n        var x = this.x\r\n        var y = this.y\r\n\r\n        this.x = x * cos - y * sin\r\n        this.y = x * sin + y * cos\r\n    }\r\n\r\n    /**\r\n     * Turns this vector to its perpendicular version\r\n     */\r\n    perpendiculate() {\r\n        var x = this.x\r\n        var y = this.y\r\n\r\n        this.x = -y\r\n        this.y = x\r\n    }\r\n\r\n    /**\r\n     * Computes dot product of this and @param other given vector\r\n     *\r\n     * @param {Vector} other The other member of dot product operation\r\n     * @returns Dot product of this and given vector\r\n     */\r\n    dotProduct(other) {\r\n        return this.x * other.x + this.y * other.y\r\n    }\r\n\r\n    /**\r\n     * Computes magnitude of this vector\r\n     *\r\n     * @returns Magnitude of this vector\r\n     */\r\n    magnitude() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y)\r\n    }\r\n\r\n    /**\r\n     * Creates a string representation of this vector\r\n     *\r\n     * @returns String representation of this vector\r\n     */\r\n    toString() {\r\n        return '[' + this.x + ', ' + this.y + ']'\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/vector.js?");

/***/ })

/******/ });